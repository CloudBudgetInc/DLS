<apex:component controller="supervisorTimeApproval_Ctrl">
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <script src="{!URLFOR($Resource.Angular_min_Js_1_6_5)}"/>
        <apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"/>
        <script src="{!URLFOR($Resource.Angular_ngRoute)}"></script>
        <script src="{!URLFOR($Resource.Filter)}"/>
        <apex:includescript value="https://code.jquery.com/jquery-1.8.2.min.js"/>
        <c:RemoteActionTk ></c:RemoteActionTk>
        
        <script src="{!URLFOR($Resource.moment)}"></script>
        <script src="{!URLFOR($Resource.MomentTimezone_Data)}"></script>
        <!-- script src="{!URLFOR($Resource.MomentTimezone)}"></script -->
        
        <link rel="stylesheet" href="{!URLFOR($Resource.DatePicker,'angular-datepicker-master/src/css/angular-datepicker.css')}"/>
        <script src="{!URLFOR($Resource.DatePicker, '/angular-datepicker-master/dist/angular-datepicker.min.js')}"></script>
        
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular-sanitize.js"></script>
        
        <apex:stylesheet value="{!URLFOR($Resource.SLDS0_12_2, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />         
        
        <style>
        /**
         * Hide when Angular is not yet loaded and initialized
         */
        [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
          display: none !important;
        }
        
        .slds-input {
            float: right;
        }
        
        .selectoptionCls {
            border: 1px solid #d8dde6;
            border-radius: 4px;
            padding: 7px;
            width:115px !important;
        }
        .slds-spinner--small  {
                z-index: 999;
                    //width: 100%;
                    //height: 100%;
                    top: 0;
                    left: 0;
                   // display: none;
                    position:fixed;             
                    background-color: #cccccc;
                    color: #aaaaaa;
                    opacity: .4;
                filter: alpha(opacity = 50);
             
        }
        .img{
            position: absolute;
            left: 50%;
            top: 50%;
            //height: 10%;
            -webkit-transform: translate(-50%,-50%);
            -ms-transform: translate(-50%,-50%);
            transform: translate(-50%,-50%);
            }
            
        .red {
            color: red;
        }
        .green{
            color: green;
        }
       
        td:before {
            font-weight: 700 !important;;
        }
        
        .invisible {
             visibility: hidden;
         }
         
         .visible {
             visibility: visible;
         }
         
         // To wrap and show the Request Notes field
        .slds .slds-table td {
            white-space: normal;
        }
        .nowrapStyle {
            white-space: normal !important;
        }
        
        //This below styles for toggle options
         
         .toggleCheckbox {
            width: 1px;
            height: 1px;
            border: 0;
            clip: rect(0 0 0 0);
            margin: -1px;
            overflow: hidden;
            padding: 0;
            position: absolute;
         }
         
         .bottomNonClass {
             margin-bottom: 0!important;
         }
         
         .gridClass {
             display: flex;
         }
         
         .checkboxtoggle1 {
             width: 100%;
         }
         
         .faxContainerClass {
            font-size: .625rem;
            color: #54698d;
         }
         
         .checkbocFaxClass {
            display: block;
            position: relative;
            width: 3rem;
            height: 1.5rem;
            border: 1px solid #9faab5;
            padding: .125rem;
            border-color: #0070d2;
            background-color: #0070d2;
            border-radius: 15rem;
            transition: background-color .2s cubic-bezier(.75,0,.08,1);
         }
         
         .checkbocFaxClass::after {
            content: '';
            position: absolute;
            top: 1px;
            left: 1px;
            width: 1.25rem;
            height: 1.25rem;
            background-color: #fff;
            border-radius: 15rem;
          }
                   
                   
          .toggleCheckbox:checked~.faxContainerClass .checkbocFaxClass::after {
                content: ' ';
                position: absolute;
                top: .25rem;
                left: .6rem;
                height: .7rem;
                width: .45rem;
                border-bottom: 2px solid #fff;
                border-right: 2px solid #fff;
                border-radius: 0;
                background-color: transparent;
                transform: rotate(45deg);
          }
          
         .toggleCheckbox:checked~.faxContainerClass .checkbocFaxClass::before {
                content: '';
                position: absolute;
                top: 1px;
                right: 1px;
                width: 1.25rem;
                height: 1.25rem;
                background-color: #fff;
                border-radius: 15rem;
                transition: transform .2s cubic-bezier(.75,0,.08,1);
          }
         
         .checkboxOn {
             display: none;
         }
         
         .checkbocOff {
             display: block;
         }
        
        .slds:not(html), .slds body {
            background: white !important;
        }
           
        .success{
            color: #fff !important;
            background-color: #2e844a !important;
         }
            
          .error{
            color: #fff !important;
            background-color: #ea001e !important;
         }
        
    </style>
    <apex:form >
        <div class="slds ng-cloak" ng-app="myApp" ng-controller="TimeSheet_InternalController">
            <div class="slds-spinner--small" style="display:none;width:100%;height:100%;" id="spinner">
                <img alt="Loading..." src="{!URLFOR($Resource.SLDS0_12_2,'assets/images/spinners/slds_spinner_brand.gif')}"  class="img" style="height: 10%;"/>
            </div>
            <div class="slds-page-header" role="banner" style="background-color: rgb(22, 50, 92);color: white;">
                <div class="slds-grid">
                    <div class="slds-media__figure">
                         <img src="{!URLFOR($Resource.MyTimeSheet_PackageIcon)}" style="width:60px;height:50px;"></img>
                        <!--<svg aria-hidden="true" class="slds-icon slds-icon--large slds-icon-standard-user">
                            <use xlink:href="{!URLFOR($Resource.SLDS0_12_2,'/assets/icons/standard-sprite/svg/symbols.svg#record')}"></use>
                        </svg>-->
                    </div>
                    <div class="slds-media__body">
                        <div class="slds-grid">
                            <h1 style="font-weight: 300;font-size: 24px;line-height: 1.25;" title="Supervisor Time Approval">Supervisor Time Approval</h1>
                        </div>
                    </div>
                    
                    <div class="slds-col slds-no-flex slds-align-bottom">
                        <div style="width: 100%;text-align: center;">
                             <!--<button class="slds-button slds-button--neutral" ng-click="timeCardDayCreation(daydatalist,datelist)">Save</button>-->
                            <div class="slds-button slds-button--neutral" ng-show="exportBtn" style="cursor: pointer;" ng-click="downloadAsCSV();">Export</div>
                        </div>
                    </div>
                    <div class="slds-col slds-no-flex slds-align-bottom">
                        <!--<div style="width: 100%;text-align: center;padding-left:10%;">
                            <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="RecordSave(displaylist)">Save</div>
                        </div>-->
                    </div>
                    <div class="slds-col slds-no-flex slds-align-bottom">
                        <div style="width: 100%;text-align: center;padding-left:17%;">
                            <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="cancel()">Back</div>
                            <!-- <input type="button" ng-click="cancel()" value="Cancel" style="border: 1px solid #d8dde6;"></div>-->
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="slds-tabs--default">
                <ul class="slds-tabs--default__nav" role="tablist">
                    <li class="slds-tabs__item slds-text-heading--label" style="margin-left:10px;margin: 0 !important;" id="li11" title="Time Summary" role="presentation"><a role="tab" tabindex="0" aria-selected="false" aria-controls="tab-scoped-11" ng-click="openBox11();">Time Summary</a></li>
                    <li class="slds-tabs__item slds-text-heading--label slds-active" style="margin: 0 !important;" id="li12" title="Enter Time" role="presentation"><a role="tab" tabindex="1" aria-selected="true" aria-controls="tab-scoped-12" ng-click="openBox12();">Approve Time</a></li>
                </ul>
                
                <div id="tab-scoped-11" class="slds-tabs__content slds-hide" role="tabpanel">
                
                    <div class="slds-card" style="margin-top: 1%;padding: 15px;">
                        <div class="slds-card__header slds-grid">
                            <div class="slds-media slds-media--center slds-has-flexi-truncate">
                                <div class="slds-media__body">
                                
                                    <div style="float: right;">
                                         <div class="slds-form-element">
                                          <label class="checkboxtoggle1 gridClass">
                                            <span class="slds-form-element__label bottomNonClass" style="font-size: 15px;">Show Details</span>
                                            <input name="checkbox" type="checkbox" aria-describedby="toggle-desc" class="toggleCheckbox" style="width: 1px;height: 1px;border: 0;clip: rect(0 0 0 0);margin: -1px;overflow: hidden;padding: 0;position: absolute;" ng-click="TableFlipfunction()"/>
                                            <span id="toggle-desc" class="faxContainerClass" aria-live="assertive">
                                              <span class="checkbocFaxClass"></span>
                                            </span>
                                          </label>
                                        </div>
                                        </div>
                                     
                                     <div class="slds-grid slds-wrap">  
                                     
                                         <!--<div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-12" style="padding-top: 1%;">
                                             <label class="slds-form-element__label">User Type</label>
                                            <select ng-model="SemiMonthlyView.UserType" class="slds-select" ng-options="i as i for i in FlipOptionList" ng-change="MonthlyUserChange()">
                                            </select>
                                         </div>-->
                                         
                                         <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-12" style="padding-top: 1%;">
                                            <label class="slds-form-element__label">Date Range</label>
                                            <select ng-model="SemiMonthlyView.summaryWeekRange" class="slds-select" ng-options="i as i for i in summaryWeekrangeFilter" ng-change="summaryToDateCalc()">
                                            </select>
                                         </div>
                                         
                                         <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-12" style="padding-top: 1%;">
                                            <label class="slds-form-element__label">Contact</label>
                                            <select ng-model="SemiMonthlyView.SelectedContact" class="slds-select" ng-options="key as value for (key,value) in summaryContactFilter" ng-change="FilterSummaryData()">
                                            </select>
                                         </div>
                                         
                                         <!--<div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-12" style="padding-top: 1%;">
                                             <label class="slds-form-element__label">Status: </label> 
                                             <select ng-model="SemiMonthlyView.SelectedStatus" class="slds-select" ng-options="i as i for i in SummaryStatusFilter" ng-change="FilterSummaryData()"></select>   
                                         </div>-->
                                         
                                         <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-12" style="padding-top: 1%;">
                                         </div>
                                     </div>
                                </div>
                            </div>
                        </div>
                        <div class="slds-card__body">
                            <div class="slds-grid" ng-hide="SummaryDataList.length > 0"> 
                                    <div class="slds-col--padded slds-size--1-of-1" style="text-align:center;margin-top:2%;">
                                        <span class="tile__label slds-text-heading--label-normal">Data not found</span>
                                    </div>
                                </div>
                            <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal slds-no-row-hover" width="100%" ng-show="tableViewDisplay">
                                <thead>
                                    <th scope="col">
                                        <span class="slds-truncate">Date</span>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">Project Name</span>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">Task Name</span>
                                    </th>
                                    <!--<th scope="col">
                                        <span class="slds-truncate">Contact Name</span>
                                    </th>-->
                                    <th scope="col">
                                        <div class="slds-hyphenate">Hours</div>
                                    </th>
                                    <!--<th scope="col">
                                        <div class="slds-hyphenate">Payroll Rate</div>
                                    </th>-->
                                    <th scope="col">
                                        <div class="slds-hyphenate">Status</div>
                                    </th>
                                    <!--<th scope="col" class="nowrapStyle">
                                        <span class="slds-hyphenate">Total Amount</span>
                                    </th>-->
                                </thead>
                                <tbody>
                                    <tr class="slds-hint-parent" ng-repeat="data in showDetaildata | orderBy:'dateValue':false">
                                        <td data-label="Date">
                                            <span>{{data.dateValue | date:'MM-dd-yyyy'}}</span>
                                        </td>
                                        <td data-label="Project Name" class="nowrapStyle">
                                            <div class="slds-hyphenate">{{data.ProjectName}}</div>
                                        </td>
                                        <td data-label="Task Name" class="nowrapStyle">
                                            <div class="slds-hyphenate">{{data.TaskName}}</div>
                                        </td>
                                        <!--<td data-label="Contact Name" class="nowrapStyle">
                                            <div class="slds-hyphenate">{{data.contactName}}</div>
                                        </td>-->
                                        <td data-label="Hours" class="nowrapStyle">
                                            <div class="slds-hyphenate">{{data.Hours}}</div>
                                        </td>
                                        <!--<td data-label="Payroll Rate" class="nowrapStyle">
                                            <div class="slds-hyphenate">${{data.Payrate}}</div>
                                        </td>-->
                                        <td data-label="Status">
                                            <div class="slds-hyphenate">{{data.Status}}</div>
                                        </td>
                                        <!--<td data-label="Total Amount" class="nowrapStyle">
                                           <div class="slds-hyphenate">${{data.TotalAmount}}</div>
                                        </td>-->
                                    </tr> 
                                    <tr class="slds-hint-parent">
                                        <td> </td>
                                        <td> </td>
                                        <td><span style="font-weight: bold;font-size: 15px;">Period Standard Hours: </span><span ng-bind="stdHrsCalculation()" style="font-weight: bold;font-size: 15px;margin-right: -45rem !important;"></span></td>
                                        <!--<td> </td>-->
                                        <td><span style="font-weight: bold;font-size: 15px;margin-left: -93px;">Total Hours: </span><span ng-bind="hoursSummaryfunction('showDetail')" style="font-weight: bold;font-size: 15px;"></span></td>
                                        <!--<td></td>-->
                                        <td></td>
                                        <!--<td data-label="Total Amount"><span style="font-weight: bold;font-size: 15px;margin-left: -100px;">Total Amount: $</span><span ng-bind="amountSummaryfunction('showDetail')" style="font-weight: bold;font-size: 15px;"></span></td> -->
                                        <!--<td></td>-->
                                    </tr>
                                   
                                </tbody>
                            </table>
                            
                            <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal slds-no-row-hover" width="100%" ng-hide="tableViewDisplay">
                                <thead>
                                    <th scope="col">
                                        <span class="slds-truncate">Day</span>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">Date</span>
                                    </th>
                                    <th scope="col">
                                        <div class="slds-hyphenate">Hours</div>
                                    </th>
                                    <!--<th scope="col">
                                        <span class="slds-hyphenate">Amount</span>
                                    </th>-->
                                </thead>
                                <tbody>
                                    <tr class="slds-hint-parent" ng-repeat="data in SummaryDataList | orderBy:'dateValue':false">
                                        <td data-label="Day">
                                            <span>{{data.dayValue}}</span>
                                        </td>
                                        <td data-label="Date">
                                            <span>{{data.dateValue | date:'MM-dd-yyyy'}}</span>
                                        </td>
                                        <td data-label="Hours" class="nowrapStyle">
                                            <div class="slds-hyphenate">{{data.Hours}}</div>
                                        </td>
                                        <!--<td data-label="Total Amount" class="nowrapStyle">
                                           <div class="slds-hyphenate">${{data.TotalAmount}}</div>
                                        </td>--->
                                    </tr> 
                                    <tr class="slds-hint-parent">
                                        <td></td>
                                        <td><span style="font-weight: bold;font-size: 15px;">Period Standard Hours: </span><span ng-bind="stdHrsCalculation()" style="font-weight: bold;font-size: 15px;margin-right: -45rem !important;"></span></td>
                                        <td><span style="font-weight: bold;font-size: 15px;margin-left: -93px;">Total Hours: </span><span ng-bind="hoursSummaryfunction('Summary')" style="font-weight: bold;font-size: 15px;"></span></td>
                                        <!--<td data-label="Total Hours"><span style="font-weight: bold;font-size: 15px;margin-left: -100px;">Total Amount: $</span><span ng-bind="amountSummaryfunction('Summary')" style="font-weight: bold;font-size: 15px;"></span></td>-->
                                    </tr>
                                   
                                </tbody>
                            </table>
                            
                        </div>
                    </div>
                    
                </div>
            
                <div id="tab-scoped-12" class="slds-tabs__content slds-show" role="tabpanel">
                    <div class="slds-grid">
                        <div  class="slds-size--8-of-12 slds-align_absolute-center">
                         </div>
                        <div  class="slds-size--2-of-12 slds-align_absolute-center">
                            <div>
                                <h4>Time Entered this Month</h4>
                                <span class="slds-badge success">On Time = {{timeEnteredOnTime}}</span>
                                <span class="slds-badge error" >Late = {{timeEnteredLate}}</span>
                            </div>                            
                        </div>
                        <div class="slds-size--2-of-12 slds-align_absolute-center">
                            <div>
                                <h4>Timesheets Submitted this Month</h4>
                                <span class="slds-badge success">On Time = {{timeSubmittedOnTime}}</span>
                                <span class="slds-badge error" >Late = {{timeSubmittedLate}}</span>
                            </div>
                        </div>
                    </div>
                    <div class="slds-card slds-m-top--small">
                        <div class="slds-card__header slds-grid">
                            <div class="slds-media slds-media--center slds-has-flexi-truncate">
                                <div class="slds-media__body">
                                    
                                    <!--h2 class="slds-text-heading--small slds-truncate" style="text-align: center;" ng-show="titlegroup">Contact - {{SelectedName}}</h2-->
                                     
                                      <div class="slds-grid slds-wrap" style="margin-top:0.5rem;" ng-show="weekRangeFilterShow">
                                        <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--6-of-12" style="padding-top: 1%;">
                                             <label class="slds-form-element__label" style="font-size: 15px;"># of timesheets awaiting: </label>
                                             <input class="slds-input" ng-model="totalSheetWaitingCount" type="text" ng-disabled="true"/> 
                                         </div>
                                         <!--<div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-12" style="padding-top: 1%;">
                                             <label class="slds-form-element__label"># of timesheets approved: </label>
                                             <input class="slds-input" ng-model="totalsheetApprovedCnt" type="text" ng-disabled="true"/> 
                                         </div>-->
                                         <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--6-of-12" style="padding-top: 1%;">
                                             <label class="slds-form-element__label" style="font-size: 15px;"># of hours waiting approval: </label>
                                             <input class="slds-input" ng-model="totalHrsCount" type="text" ng-disabled="true"/> 
                                         </div>
                                    </div>
                                       
                                     
                                     <div class="slds-grid slds-wrap" style="margin-top:25px;">
                                         
                                         <!--<div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--4-of-12">
                                            <label>User Type</label>
                                            <select ng-model="selectedUserType" class="slds-select" ng-options="i as i for i in FlipOptionList" ng-change="displayConfirmationWindow('FromUserType')">
                                            </select>
                                         </div>-->
                                         
                                         <!--<div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--4-of-12" ng-if="RecTypeMTSelectShow">
                                            <label>Project RecordType</label>
                                             <multi-picklist ng-if="RecTypeMTSelectShow" options="multiSelectObj.RecordTypeFilterList" on-blur="onDropDownClosed" selected-options="multiSelectObj.selectedProjectRT"></multi-picklist>
                                         </div>-->
                                         
                                          <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--4-of-12">
                                             <label>Contact</label>
                                            <select ng-model="selectedContactId" ng-options="key as value for (key,value) in contactList" class="slds-select" ng-change="displayConfirmationWindow('detailViewChange')">
                                                <!--<option ng-repeat="(key, value) in groupedList" value="{{key}}">{{value.Name}}</option>-->
                                            </select>
                                        </div>
                                        
                                        <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--4-of-12" ng-show="weekRangeFilterShow">
                                            <label>Week</label>
                                            <select ng-model="selectedWeekrange" class="slds-select" ng-options="i as i for i in weekRangeList" ng-change="displayConfirmationWindow('WeekRangeFlip')" >
                                            </select>
                                        </div>
                                        
                                        <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--4-of-12">
                                            <label>Approve as Delegated Approver</label>
                                            <select ng-model="selectedDAUser" class="slds-select" ng-options="i.Id as i.Name for i in UsersRelatedtoDA" ng-change="displayConfirmationWindow('Approver Selection')" >
                                            </select>
                                        </div>
                                        <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--4-of-12">
                                        </div>
                                        <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--4-of-12">
                                        </div>
                                         
                                    </div>
                                    
                                   
                                </div>
                            </div>
                        </div>
                        <div class="slds-card__body">
                        </div>
                    </div>
                   
                 
                   <div ng-hide="MsgDisplay" style="text-align:center">No Records To Display</div>
                   
                    <!-- This table for summary data group by operation --->
                    <div class="slds-card" ng-show="summaryDetailtabel">
                        <div class="slds-card__header slds-grid">
                            <div class="slds-media slds-media--center slds-has-flexi-truncate">
                            </div>
                            
                             <div class="slds-no-flex">
                                <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="saveChangesonlyFunction()">Save Changes Only</div>
                                <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="approveAllFunction()">Approve All</div>
                                <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="rejectAllFunction()">Reject All</div>
                                <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="advancedAppRejFunction()">Advanced Approve / Reject</div>
                             </div>
                            
                        </div>
                        
                        <div class="slds-card__body">
                            <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal slds-no-row-hover" width="100%">
                                <thead>
                                    <th scope="col" class="nowrapStyle">
                                        <div class="slds-hyphenate">Charge Code</div>
                                        <div class="slds-button slds-button slds-button--icon" ng-show="selectedUserType != 'Instructor'" style="color: #16325c;margin-top: -20px;margin-left: 25%;" aria-describedby="help" title="Project Name / Task Name / Payroll Item / Billable / Location">
                                            <svg class="slds-icon slds-icon-text-default" aria-hidden="true" style="width:20px;height:20px;">
                                                <use xlink:href="{!URLFOR($Resource.SLDS_2_1_3, '/assets/icons/utility-sprite/svg/symbols.svg#info')}"></use>
                                            </svg>
                                            <span class="slds-assistive-text">Project Name / Task Name / Payroll Item / Billable / Location</span>
                                        </div>
                                        <div class="slds-button slds-button slds-button--icon" ng-show="selectedUserType == 'Instructor'" style="color: #16325c;margin-top: -20px;margin-left: 25%;" aria-describedby="help" title="Project Name / Task Name / Payroll Item / Location">
                                            <svg class="slds-icon slds-icon-text-default" aria-hidden="true" style="width:20px;height:20px;">
                                                <use xlink:href="{!URLFOR($Resource.SLDS_2_1_3, '/assets/icons/utility-sprite/svg/symbols.svg#info')}"></use>
                                            </svg>
                                            <span class="slds-assistive-text" >Project Name / Task Name / Payroll Item / Location</span>
                                        </div>
                                       
                                    </th>
                                    <th scope="col" ng-show="summarycolumn1" class="nowrapStyle">
                                        <div class="slds-hyphenate">Contact Name</div>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">{{dateLableArray[0]}}</span>
                                        <div>MON</div>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">{{dateLableArray[1]}}</span>
                                        <div>TUE</div>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">{{dateLableArray[2]}}</span>
                                        <div>WED</div>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">{{dateLableArray[3]}}</span>
                                        <div>THU</div>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">{{dateLableArray[4]}}</span>
                                        <div>FRI</div>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">{{dateLableArray[5]}}</span>
                                        <div>SAT</div>
                                    </th>
                                    <th scope="col">
                                        <span class="slds-truncate">{{dateLableArray[6]}}</span>
                                        <div>SUN</div>
                                    </th>
                                    <th scope="col" style="width:5rem;">
                                        <span class="slds-truncate">Total Hours</span>
                                    </th>
        
                                </thead>
                                <tbody>
                                    <tr class="slds-hint-parent" ng-repeat="value in detailList[selectedContactId] | orderBy:'sequenceNumber':false">
                                        
                                        <td data-label="Charge Code" class="nowrapStyle">
                                            <div class="slds-hyphenate" style="font-size: 12px;">{{value.project_Task_Payroll_Billable_Location}}</div>
                                        </td>
                                        <td data-label="Contact Name" class="nowrapStyle" ng-show="summarycolumn1"> 
                                            <div class="slds-hyphenate">{{value.Instructor}}</div>
                                        </td>
                                        <td data-label="{{dateLableArray[0]}}">
                                            <span class="slds-truncate" style="cursor:pointer;{{value.colour1}};{{value.size1}}" ng-class="" ng-click="SummaryModelOpen(value,'Hrs1Day1Id','colour1')">{{value.Hours1}}</span>
                                        </td>
                                        <td data-label="{{dateLableArray[1]}}">
                                           <span class="slds-truncate" style="cursor:pointer;{{value.colour2}};{{value.size2}}" ng-click="SummaryModelOpen(value,'Hrs2Day2Id','colour2')">{{value.Hours2}}</span>
                                        </td>
                                        <td data-label="{{dateLableArray[2]}}">
                                            <span class="slds-truncate" style="cursor:pointer;{{value.colour3}};{{value.size3}}" ng-click="SummaryModelOpen(value,'Hrs3Day3Id','colour3')">{{value.Hours3}}</span>
                                        </td>
                                        <td data-label="{{dateLableArray[3]}}">
                                            <span class="slds-truncate" style="cursor:pointer;{{value.colour4}};{{value.size4}}" ng-click="SummaryModelOpen(value,'Hrs4Day4Id','colour4')">{{value.Hours4}}</span>
                                        </td>
                                        <td data-label="{{dateLableArray[4]}}">
                                            <span class="slds-truncate" style="cursor:pointer;{{value.colour5}};{{value.size5}}" ng-click="SummaryModelOpen(value,'Hrs5Day5Id','colour5')">{{value.Hours5}}</span>
                                        </td>
                                        <td data-label="{{DaysList[5]}}">
                                            <span class="slds-truncate" style="cursor:pointer;{{value.colour6}};{{value.size6}}" ng-click="SummaryModelOpen(value,'Hrs6Day6Id','colour6')">{{value.Hours6}}</span>
                                        </td>
                                        <td data-label="{{dateLableArray[6]}}">
                                           <span class="slds-truncate" style="cursor:pointer;{{value.colour7}};{{value.size7}}" ng-click="SummaryModelOpen(value,'Hrs7Day7Id','colour7')">{{value.Hours7}}</span>
                                        </td>
                                        <td data-label="Total Hrs">
                                            <input class="slds-input" style="width: 5rem;text-align: right;" ng-model="value.TotalHours" type="text" ng-disabled="true"/>
                                        </td>
                                    </tr>
                                    
                                    <tr class="slds-hint-parent">
                                        <td>Total Hours</td>
                                        <td data-label="Total Hours"><span style="margin-top: 10px;" ng--bind="getHoursSumValues(detailList[selectedContactId],'Hours1','Day1',DaysList[0])"></span></td> 
                                        <td data-label="Total Hours"><span style="margin-top: 10px;" ng--bind="getHoursSumValues(detailList[selectedContactId],'Hours2','Day2',DaysList[1])"></span></td>
                                        <td data-label="Total Hours"><span style="margin-top: 10px;" ng--bind="getHoursSumValues(detailList[selectedContactId],'Hours3','Day3',DaysList[2])"></span></td>
                                        <td data-label="Total Hours"><span style="margin-top: 10px;" ng--bind="getHoursSumValues(detailList[selectedContactId],'Hours4','Day4',DaysList[3])"></span></td>
                                        <td data-label="Total Hours"><span style="margin-top: 10px;" ng--bind="getHoursSumValues(detailList[selectedContactId],'Hours5','Day5',DaysList[4])"></span></td>
                                        <td data-label="Total Hours"><span style="margin-top: 10px;" ng--bind="getHoursSumValues(detailList[selectedContactId],'Hours6','Day6',DaysList[5])"></span></td>
                                        <td data-label="Total Hours"><span style="margin-top: 10px;" ng--bind="getHoursSumValues(detailList[selectedContactId],'Hours7','Day7',DaysList[6])"></span></td>
                                        <td><span class="slds-float_right" style="margin-top: 10px;margin-right: 1rem;" ng--bind="totalhours(detailList[selectedContactId])"></span></td>
                                    </tr>
                                    
                                </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <!-- End of group by table code -->
                    <!-- end of summary code --->
                    
                    <!-- This table for notes section display -->
                        <div class="slds-card" style="margin-top: 1%;padding: 15px;" ng-show="summaryDetailtabel">
                            <div class="slds-card__header slds-grid">
                                <div class="slds-media slds-media--center slds-has-flexi-truncate">
                                    <div class="slds-media__body">
                                        <span class="slds-text-heading--small">Notes</span>
                                    </div>
                                </div>
                            </div>
                            <div class="slds-card__body">
                                <div class="slds-grid" ng-show="NotesSectionDisplay"> 
                                        <div class="slds-col--padded slds-size--1-of-1" style="text-align:center;">
                                            <span class="tile__label slds-text-heading--label-normal">Data not found</span>
                                        </div>
                                    </div>
                                <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal slds-no-row-hover" width="100%"  ng-hide="NotesSectionDisplay">
                                    <thead>
                                        <!--<th scope="col">
                                            <span class="slds-truncate">Notes </span>
                                        </th>-->
                                    </thead>
                                    <tbody>
                                        <tr class="slds-hint-parent" ng-repeat="value in commentsList | orderBy:'createdDate':true">
                                            <td style="white-space: normal;text-align:left;">
                                                 <span style="font-weight: bold;" ng-if="value.UserName != ''">User Name:</span><span ng-if="value.UserName != ''"> {{value.UserName}}.</span>
                                                 <span style="font-weight: bold;" ng-if="value.Edited != ''">Edited:</span><span ng-if="value.Edited != ''"> {{value.Edited}}.</span>
                                                 <span style="font-weight: bold;" ng-if="value.ChargeCode != ''">Charge Code: </span> <span ng-if="value.ChargeCode != ''"> {{value.ChargeCode}}.</span>
                                                 <span style="font-weight: bold;" ng-if="value.TaskName != ''"> Task Name: </span> <span ng-if="value.TaskName != ''"> {{value.TaskName}}.</span>
                                                 <span style="font-weight: bold;" ng-if="value.Date != ''">Date: </span> <span ng-if="value.Date != ''"> {{value.Date | date:'MM-dd-yyyy'}}. </span>
                                                 <span style="font-weight: bold;" ng-if="value.OldHrs != ''">Old Hours: </span> <span ng-if="value.OldHrs != ''"> {{value.OldHrs}} Hrs. </span>
                                                 <span style="font-weight: bold;" ng-if="value.NewHrs != ''">New Hours: </span> <span ng-if="value.NewHrs != ''"> {{value.NewHrs}} Hrs. </span>
                                                 <span style="font-weight: bold;" ng-if="value.OldStatus != ''">Old Status: </span> <span ng-if="value.OldStatus != ''"> {{value.OldStatus}}. </span>
                                                 <span style="font-weight: bold;" ng-if="value.NewStatus != ''">New Status: </span> <span ng-if="value.NewStatus != ''"> {{value.NewStatus}}. </span>
                                                 <span style="font-weight: bold;">Comment: </span><span> {{value.Comment}}.</span><br/>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    <!-- End of this table -->
                </div>
                <!-- End of 2nd tab--->
            
            </div>
            <!-- End of tab div -->
            
            <!-- This model used to display details for each summary day --->
            
             <div aria-hidden="false" role="dialog" class="slds-modal {{modalStateForSummary}}">
                <div class="slds-modal__container" style="width: 100%;max-width: 900px !important;">
                      <div class="slds-modal__header" style="background-color: rgb(22, 50, 92);color: white;">
                        <h2 class="slds-text-heading--medium" style="font-weight: 300;font-size: 24px;line-height: 1.25;"></h2>
                      </div>
                      <div class="slds-modal__content">
                            <table class="slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal slds-no-row-hover" width="100%" ng-show="daysummaryDetail.length > 0">
                                <thead>
                                    <tr>
                                        <th scope="col">
                                            <span class="slds-truncate">Project Name</span>
                                        </th>
                                        <th scope="col">
                                            <span class="slds-truncate">Task Name</span>
                                        </th>
                                         <th scope="col">
                                            <span class="slds-truncate"> Start Time</span>
                                        </th>
                                         <th scope="col">
                                            <span class="slds-truncate"> End Time</span>
                                        </th>
                                        <th scope="col">
                                            <span class="slds-truncate">Billable</span>
                                        </th>
                                        <th scope="col">
                                            <span class="slds-truncate">Request Notes</span>
                                        </th>
                                        <th scope="col">
                                            <span class="slds-truncate">Action</span>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                   
                                    <tr ng-repeat="daySum in daysummaryDetail" class="slds-hint-parent">
                                        
                                       <td data-label="Project Name">
                                          <span class="slds-truncate">{{daySum.ProjectName}}</span>
                                        </td>
                                         <td data-label="Task Name">
                                          <span class="slds-truncate">{{daySum.TaskName}}</span>
                                        </td>
                                        <td data-label="Start Time">
                                            <span class="slds-truncate">{{daySum.Start_Time__c}}</span>
                                        </td>
                                        <td data-label="End Time">
                                            <span class="slds-truncate">{{daySum.End_Time__c}}</span>
                                        </td>
                                        <td data-label="Billable">
                                            <span class="slds-truncate">{{daySum.billable}}</span>
                                        </td>
                                        <td data-label="Request Notes" class="nowrapStyle">
                                            <div class="slds-hyphenate">{{daySum.AcctSeed__Internal_Comment__c}}</div>
                                        </td>
                                        <td data-label="Action">
                                            <span class="slds-icon__container slds-icon-action-approval" style="padding: .5rem !important;border-radius: 50% !important;cursor: pointer;" ng-click="summaryApproveClick(daySum)">
                                                <svg aria-hidden="true" class="slds-icon icon__svg slds-icon-action-approval">
                                                    <use xlink:href="{!URLFOR($Resource.SLDS0_12_2,'/assets/icons/action-sprite/svg/symbols.svg#approval')}"></use>
                                                </svg>
                                            </span>
                                            <span class="slds-icon__container slds-icon-action-reject" style="padding: .5rem !important;border-radius: 50% !important;cursor: pointer;" ng-click="summaryRejectClick(daySum)">
                                                <svg aria-hidden="true" class="slds-icon icon__svg slds-icon-action-reject">
                                                    <use xlink:href="{!URLFOR($Resource.SLDS0_12_2,'/assets/icons/action-sprite/svg/symbols.svg#reject')}">
                                                    </use>
                                                </svg>
                                            </span>
                                        </td>
                                        
                                    </tr>
                                </tbody>
                            </table>
                     </div>
                     <div class="slds-modal__footer">
                        <input type="button" class="slds-button slds-button--neutral" value="Close" ng-click="modalStateForSummary = '';modalBackdropStateForSummary = '';"></input>
                     </div>
               </div>
          </div>
          <div class="slds-modal-backdrop {{modalBackdropStateForSummary}}"></div>
            
            <!-- End of model code --->
            
            <!-- This below model for get reject reason for normal operation -->
            
            <div aria-hidden="false" role="dialog" class="slds-modal {{modalState1}}">
                <div class="slds-modal__container" style="width:50px;">
                    <div class="slds-modal__header" style="background-color: rgb(22, 50, 92);color: white;">
                        <h2 class="slds-text-heading--medium" style="font-weight: 300;font-size: 24px;line-height: 1.25;">Reason For Rejection</h2>
                    </div>
                    <div class="slds-modal__content">
                         <textarea class="slds-textarea" ng-model="Comment" style="padding: 0px;min-height: 40px;"/>
                    </div>
                    <div class="slds-modal__footer">
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="closefunction()">Close</div>
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="rejectAfterReasonEnter()">Submit</div>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop {{modalBackdropState1}}"></div>
            
            <!-- End of Model code --->
            
            <!-- This below model for get reject reason for Summary table operation -->
            
            <div aria-hidden="false" role="dialog" class="slds-modal {{modalStateReject}}">
                <div class="slds-modal__container" style="width:50px;">
                    <div class="slds-modal__header" style="background-color: rgb(22, 50, 92);color: white;">
                        <h2 class="slds-text-heading--medium" style="font-weight: 300;font-size: 24px;line-height: 1.25;">Reason For Rejection</h2>
                    </div>
                    <div class="slds-modal__content">
                        <div class="slds-form-element {{summaryCmtError}}">
                            <label class="slds-form-element__label">Enter Reason</label>
                            <div class="slds-form-element__control">
                                <textarea class="slds-textarea" ng-model="summaryComment" style="padding: 0px;min-height: 40px;"/>
                            </div>
                         </div>  
                         
                    </div>
                    <div class="slds-modal__footer">
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="summaryRejectreasonEntered()">Okay</div>
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="modalStateReject = '';modalBackdropStateReject = '';">Close</div>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop {{modalBackdropStateReject}}"></div>
            
            <!-- End of Model code --->
            
            <!-- This below model for Approve / Reject all operation for Summary-->
            
            <div aria-hidden="false" role="dialog" class="slds-modal {{modalStateAll}}">
                <div class="slds-modal__container">
                    <div class="slds-modal__header" style="background-color: rgb(22, 50, 92);color: white;">
                        <h2 class="slds-text-heading--medium" style="font-weight: 300;font-size: 24px;line-height: 1.25;">{{titleApprove_Reject}}</h2>
                    </div>
                    <div class="slds-modal__content">
                        <div class="slds-form-element {{overAllrejectError}}" ng-show="ShowReasonBox">
                            <label class="slds-form-element__label">Enter Rejection Reason</label>
                            <div class="slds-form-element__control">
                                <textarea class="slds-textarea" ng-show="ShowReasonBox" ng-model="overAllrejectComment" style="padding: 0px;min-height: 40px;"/><br/>
                            </div>
                         </div> 
                         <p ng-bind-html="DAApproverMsg"></p>
                         <p>{{hrsDetailsInfo}}</p> 
                         <!--<p>{{Approve_RejectContent}}</p>-->
                         
                    </div>
                    <div class="slds-modal__footer">
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="yesClickForApprove_Reject()">Yes</div>
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="modalStateAll = '';modalBackdropStateAll = '';">No</div>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop {{modalBackdropStateAll}}"></div>
            
            <!-- End of Model code --->
            
             <!-- This below model for Advanced Approve / Reject operation for Summary-->
            
            <div aria-hidden="false" role="dialog" class="slds-modal {{modalStateAdvanced}}">
                <div class="slds-modal__container" style="width: 100%;max-width: 740px;">
                    <div class="slds-modal__header" style="background-color: rgb(22, 50, 92);color: white;">
                        <h2 class="slds-text-heading--medium" style="font-weight: 300;font-size: 24px;line-height: 1.25;"></h2>
                    </div>
                    <div class="slds-modal__content">
                         <p ng-if="selectedDAUser != '--None--'">You are approving/rejecting timesheet on behalf of <b>{{selectedUsrName}}</b>.</p>
                         <p>Total Approved hours: {{approvalHrsCount}}</p>
                         <p>Total Rejected hours: {{rejectedHrsCount}}</p>
                         <p>Pending hours: {{overAllpendingHrs}}</p>
                    </div>
                    <div class="slds-modal__footer">
                        <!--<div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="saveChangesonlyFunction()">Save Changes Only</div>-->
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="savechanges_ApprovePending()">Save Changes and Approve Pending Hours</div>
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="savechanges_RejectPending()">Save Changes and Reject Pending Hours</div>
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="modalStateAdvanced = '';modalBackdropStateAdvanced = '';">Cancel</div>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop {{modalBackdropStateAdvanced}}"></div>
            
            <!-- End of Model code --->
            
            <!-- This below model for get reject reason for Pending hrs rejection operation -->
            
            <div aria-hidden="false" role="dialog" class="slds-modal {{modalStatePendingReject}}">
                <div class="slds-modal__container" style="width:50px;">
                    <div class="slds-modal__header" style="background-color: rgb(22, 50, 92);color: white;">
                        <h2 class="slds-text-heading--medium" style="font-weight: 300;font-size: 24px;line-height: 1.25;">Reason For Rejection</h2>
                    </div>
                    <div class="slds-modal__content">
                        <div class="slds-form-element {{pendingCmtError}}">
                            <label class="slds-form-element__label">Enter Reason</label>
                            <div class="slds-form-element__control">
                                <textarea class="slds-textarea" ng-model="pendingComment" style="padding: 0px;min-height: 40px;"/>
                            </div>
                         </div>  
                         
                    </div>
                    <div class="slds-modal__footer">
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="PendingHrsRejectReasonEntered()">Okay</div>
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="modalStatePendingReject = '';modalBackdropStatePendingReject = '';">Close</div>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop {{modalBackdropStatePendingReject}}"></div>
            
            <!-- End of Model code --->
            
             <div aria-hidden="false" role="dialog" class="slds-modal {{modalStateVariable}}">
                <div class="slds-modal__container">
                          <div class="slds-modal__header" style="background-color: cadetblue;color: white;">
                            <h2 class="slds-text-heading--medium" style="font-weight: 300;font-size: 24px;line-height: 1.25;">{{MessgeTitle}}</h2>
                          </div>
                          <div class="slds-modal__content">
                               <p>{{MessageContent}}</p>
                         </div>
                         <div class="slds-modal__footer">
                            <input type="button" class="slds-button slds-button--neutral" value="Okay" ng-click="OkayClickFunction()"></input>
                         </div>
                   </div>
              </div>
              <div class="slds-modal-backdrop {{modalBackdrop}}"></div>
              
              <!-- Model for to get conformation on All filter change -->
        
            <div aria-hidden="false" role="dialog" class="slds-modal {{modalStateForFilterChange}}">
                <div class="slds-modal__container">
                     <div class="slds-modal__header" style="background-color: cadetblue;color: white;">
                         <h2 class="slds-text-heading--medium">Confirmation Message</h2>
                     </div>
                    <div class="slds-modal__content"> 
                        <div>
                            <p>Would you like to save changes?</p>
                        </div>
                    </div>
                    <div class="slds-modal__footer">                                                  
                       <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="OkayFunction()">Yes</div>
                       <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="cancelForConfirmation()">No</div>
                       <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="proceedwithoutsave()">Proceed without Save</div>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop {{modalBackdropStateForFilterChange}}"></div>
            
            <!-- This below model for delegated approver action confirmation on save changes only action-->
            
            <div aria-hidden="false" role="dialog" class="slds-modal {{modalStateDAchangesOnly}}">
                <div class="slds-modal__container">
                    <div class="slds-modal__header" style="background-color: rgb(22, 50, 92);color: white;">
                        <h2 class="slds-text-heading--medium" style="font-weight: 300;font-size: 24px;line-height: 1.25;">Approve/Reject Confirmation</h2>
                    </div>
                    <div class="slds-modal__content">
                         <p>You are approving/rejecting timesheet on behalf of <b>{{selectedUsrName}}</b>. Would you like to save the changes?</p> 
                    </div>
                    <div class="slds-modal__footer">
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="approveAsYesClick()">Yes</div>
                        <div class="slds-button slds-button--neutral" style="cursor: pointer;" ng-click="modalStateDAchangesOnly = '';modalBackdropStateDAchangesOnly = '';">No</div>
                    </div>
                </div>
            </div>
            <div class="slds-modal-backdrop {{modalBackdropStateDAchangesOnly}}"></div>
            
            <!-- End of Model code --->
            
              <script type="text/ng-template" id="multiplePick.html">
                <div id="mulipicklist" class="slds">
                    <div class="slds-picklist" aria-expanded="true">
                        <button type="button" class="slds-button slds-button--neutral slds-picklist__label" aria-haspopup="true" ng-click="toggleDropdown($event)" style="width:350px;">
                            <span class="slds-truncate">{{count}} Selected</span>
                            <svg aria-hidden="true" class="slds-icon">
                                <use xlink:href="{!URLFOR($Resource.SLDS0_12_2, 'assets/icons/utility-sprite/svg/symbols.svg#down')}"></use>
                            </svg>
                        </button>
                        <div class="slds-dropdown slds-dropdown--left slds-dropdown--menu" ng-class="{'slds-hide': !isOptVisible}" style="position: absolute;width: 100%;">
                            <ul class="slds-dropdown__list" role="menu">
                              <li id="{{$index}}"  href="#"  class="slds-dropdown__item" style="font-size: initial;" ng-repeat="inp in pickListOptions track by $index"  ng-class="{'slds-is-selected':isSelected(inp)}" ng-click="toggleSelectOption(inp)">
                                <a href="javascript:void(0)" role="menuitemradio">
                                  <p class="">
                                        <svg ng-class="{'visible': isSelected(inp)}" aria-hidden="true" class="slds-icon slds-icon--selected slds-icon--x-small slds-icon-text-default slds-m-right--x-small invisible" style="position: initial;">
                                            <use xlink:href="{!URLFOR($Resource.SLDS0_12_2, 'assets/icons/utility-sprite/svg/symbols.svg#check')}"></use>
                                        </svg>
                                        {{inp}}
                                    </p>
                                </a>
                              </li>
                            </ul>
                         </div>
                    </div>
                </div>
            </script>
            
        </div>
     </apex:form>
    </html>
    
  <script>
  
    var force = new remotetk.Client();
    
    var underscore = angular.module('underscore', []);
    underscore.factory('_', ['$window', function($window) {
        return $window._;
    }]);
    
    var app = angular.module('myApp', ['ngRoute','720kb.datepicker','underscore','ngSanitize']);
    app.controller('TimeSheet_InternalController', function($scope,$timeout,$routeParams,$location,$route,_) {
            
            document.getElementById("spinner").style.display = 'block';
            
            var AllDataArray = [];
            $scope.multiSelectObj = {};
            $scope.RecTypeMTSelectShow = false;

            $scope.modalBackdropState = "";
            $scope.modalState = "";
            $scope.modalBackdropState1 = "";
            $scope.modalState1 = "";
            $scope.modalStateVariable = "";
            $scope.modalBackdrop = "";
            $scope.MessageContent = '';
            $scope.MessgeTitle = '';
            
            $scope.titlegroup = false;

            $scope.contactList = {};
            $scope.detailList = {};

            $scope.MsgDisplay = true;
            $scope.exportBtn = false;
            
            // Added by Sukanya on Dec 9 2016 for Internal & Instructor Flip Option
            
            $scope.FlipOptionList = ['Internal','Instructor'];
            $scope.selectedUserType = 'Internal';
            
            // For delegated Approver related use case
            $scope.UsersRelatedtoDA = [];
            $scope.selectedDAUser = '--None--';
            
            $scope.conIdWithTimeEnteredCountMap = {};
            $scope.timeEnteredOnTime = 0;
            $scope.timeEnteredLate = 0;
            $scope.timeSubmittedOnTime = 0;
            $scope.timeSubmittedLate = 0;
            
            var curr = new Date();
            var date = curr.getDate();
            var month = curr.getMonth()+ 1;
            var year = curr.getFullYear();

            if(month < 10)
                month = '0'+ month;
            if(date < 10)
                date = '0' + date;
            var currentDate = year+'-'+month+'-'+date;
            
            // this is for Summary table formation
            
            $scope.SummaryViewTable = [];
            $scope.dayDetailforSummaryMap = {};
            
            $scope.modalStateForSummary = '';
            $scope.modalBackdropStateForSummary = '';
            
            var AllDataArrayForSummary = [];
            $scope.summarycolumn1 = true;
            
            // For Notes section formation
            $scope.commentsList = [];
            var commentFormationList = [];
            $scope.NotesSectionDisplay = true;
            
            // For hiding view option selection - View option always "Summary"
            $scope.hideViewOption = true;
            
            $scope.DaysList = [];
            var currentDay = curr.getDay();
            
            var first = new Date(curr.getTime() - (currentDay * 24 * 60 * 60 * 1000) + 24 * 60 * 60 * 1000);
            var last = new Date(curr.getTime() + ((7 - currentDay) * 24 * 60 * 60 * 1000));
           
            var stdate = first.getDate();
            var stmnth = first.getMonth()+ 1;
            var styr = first.getFullYear();
    
            var eddate = last.getDate();
            var edmnth = last.getMonth()+ 1;
            var edyr = last.getFullYear();
    
            if(stdate < 10) {
                stdate = '0'+stdate;
            }
            if(eddate < 10) {
                eddate = '0'+eddate;
            }
            if(stmnth < 10) {
                stmnth = '0'+stmnth;
            }
            if(edmnth < 10) {
                edmnth = '0'+edmnth;
            }
            var st = styr+'-'+stmnth+'-'+stdate;
            var ed = edyr+'-'+edmnth+'-'+eddate;
    
            console.log(st);
            console.log(ed);
            
            var WeekStart = moment(st);
            var WeekEnd = moment(st).add(6, 'days').format('YYYY-MM-DD');
            
            $scope.dateLableArray = [];
            
            while(WeekStart.isBefore(WeekEnd) || WeekStart.isSame(WeekEnd)) {
               $scope.DaysList.push(WeekStart.format('YYYY-MM-DD'));
               $scope.dateLableArray.push(WeekStart.format('MM/DD/YY'));
               WeekStart.add(1, 'days').format('YYYY-MM-DD');
            }
            
            $scope.FromDate = moment(st).format('YYYY-MM-DD');
            $scope.ToDate = moment($scope.FromDate).add(6, 'days').format('YYYY-MM-DD');
            
            $scope.modalStateReject = '';
            $scope.modalBackdropStateReject = '';
            
            $scope.modalStateForFilterChange = '';
            $scope.modalBackdropStateForFilterChange = '';
            
            // Below varibles for confirmation window usage
            
            var flipOption;
            var ProjectRT;
            var SVP;
            var SV;
            var SPV;
            var SWR;
            
            $scope.userId = '{!$User.Id}';
            
            // Get the Url values on page load
            
            // Get Url user type
            var UrlUType = '';
            
            if($location.absUrl().contains('UserType')) {
                UrlUType = $location.absUrl().split('UserType=')[1].split('&WeekRange')[0];  
                console.log(':::::UrlUType::::::',UrlUType);
            }
            
            var urlWeekrange = '';
        
            if($location.absUrl().contains('WeekRange')) {
                var address = '';
                if($location.absUrl().contains('+'))
                    address = $location.absUrl().split('+').join('%20');
                else
                    address = $location.absUrl();
                
                urlWeekrange = decodeURIComponent(address).split('WeekRange=')[1].split('&DAUser=')[1];
                console.log(':::::urlWeekrange::::::',urlWeekrange);
            }
            
            var urlUsr = '';
            
            if($location.absUrl().contains('DAUser')){
                urlUsr = $location.absUrl().split('&DAUser=')[1];
            }
            
            $scope.urlValues = {
                urlUserType: UrlUType,
                urlWeekrange: urlWeekrange,
                urlUser: urlUsr
            };
            
            if($scope.urlValues.urlUserType){
                $scope.selectedUserType = $scope.urlValues.urlUserType;
            }
            
            if($scope.urlValues.urlUser){
                $scope.selectedDAUser = $scope.urlValues.urlUser;
            }
            
            // For tabbed view option
             $scope.openBox11 = function() {
                $('.slds-active').removeClass('slds-active');
                $('#li11').addClass('slds-active');
                $('.slds-show').removeClass('slds-show');
                $('#tab-scoped-11').addClass('slds-show');
                $('#tab-scoped-12').addClass('slds-hide');
            }
            
            $scope.openBox12 = function() {
                $('.slds-active').removeClass('slds-active');
                $('#li12').addClass('slds-active');
                $('.slds-show').removeClass('slds-show');
                $('#tab-scoped-11').addClass('slds-hide');
                $('#tab-scoped-12').addClass('slds-show');
            }
            
            //Initial load tab
            $scope.openBox12();
            
            // For Semi-Monthly view
            $scope.SemiMonthlyView = {};
            $scope.SemiMonthlyView.UserType = 'Internal';
            
            var summary_AllDataArray = [];
            var summary_AllDataArray1 = [];
            
            function getTimeCardMethod() {
                
                document.getElementById("spinner").style.display = 'block';
                
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.supervisorTimeApproval_Ctrl.getTimeCardDayDetails}',
                    $scope.selectedDAUser,
                    function(result, ev) {
                        if(ev.status) {
                        
                            $timeout(function(){
                                console.log('::::result:::',result);
                                
                                //$scope.SummaryViewTable = result.summaryViewJsonData;
                                //AllDataArrayForSummary = angular.copy(result.summaryViewJsonData);
                                $scope.dayDetailforSummaryMap = result.dayIddayRecordMap;
                                
                                $scope.weekRangeList = result.weekRangeValues;
                                var lastIndex = $scope.weekRangeList.length;
                                
                                // Apply url values for latest modification display
                                
                                if($scope.urlValues.urlWeekrange && $scope.weekRangeList.indexOf($scope.selectedWeekrange) != -1) {
                                    $scope.selectedWeekrange = $scope.urlValues.urlWeekrange;
                                }else {
                                    $scope.selectedWeekrange = $scope.weekRangeList[lastIndex - 1];
                                }
                                
                                console.log(':::::$scope.weekRangeList:::::',$scope.weekRangeList);
                                console.log(':::::$scope.selectedWeekrange:::::',$scope.selectedWeekrange);
                                
                                $scope.WeekRangeUserHrsCountMap = result.WeekRangeUserId_HrsCountMap;
                                
                                $scope.totalSheetWaitingCount = Object.keys($scope.WeekRangeUserHrsCountMap).length;
                                
                                var totalHrs = 0;
                                
                                for(var key in $scope.WeekRangeUserHrsCountMap) {
                                    if($scope.WeekRangeUserHrsCountMap.hasOwnProperty(key)) {
                                        totalHrs += $scope.WeekRangeUserHrsCountMap[key];
                                    }
                                }
                                console.log(':::::totalHrs:::::',totalHrs);
                                $scope.totalHrsCount = totalHrs;
                                
                                $timeout(function() {
                                    
                                    if($scope.selectedWeekrange) {
                                        $scope.getSummarydetails_ForWeekRange();
                                    } else {
                                        $scope.MsgDisplay = false;
                                        $scope.summaryDetailtabel = false; 
                                        $scope.weekRangeFilterShow = true;
                                        $scope.NotesSectionDisplay = false;
                                        document.getElementById("spinner").style.display = 'none';
                                    }
                                },1000);
                                
                            });
                            
                        } else {
                            console.log('::::ev::::',ev);
                        }
                    },
                    {escape: true}
                ); 
            }
            
            // below function to qry last week & this week data for Summary table
            
            $scope.getSummarydetails_ForWeekRange = function() {
                
                $scope.dateLableArray = [];
                $scope.DaysList = [];
                
                commentFormationList = [];
                
                $scope.approvalHrsCount = 0;
                $scope.rejectedHrsCount = 0;
                $scope.overAllpendingHrs = 0;
                
                approveHrsCnt = 0;
                rejectHrsCount = 0;
                
                $scope.overAllapprovedHrs = 0;
                $scope.overAllrejectesHrs = 0;
                
                var dt1 = moment($scope.selectedWeekrange.split(' to ')[0]).format('YYYY-MM-DD');
                var dt2 = moment(dt1).add(6,'days').format('YYYY-MM-DD');
                
                var WeekStart = moment(dt1);
                var WeekEnd = moment(WeekStart).add(6,'days').format('YYYY-MM-DD');
               
                while(WeekStart.isBefore(WeekEnd) || WeekStart.isSame(WeekEnd)) {
                   $scope.DaysList.push(WeekStart.format('YYYY-MM-DD'));
                   $scope.dateLableArray.push(WeekStart.format('MM/DD/YY'));
                   WeekStart.add(1, 'days').format('YYYY-MM-DD');
                }
               
                document.getElementById("spinner").style.display = 'block';
                
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.supervisorTimeApproval_Ctrl.getSummaryInfoForWeekRange}',
                    dt1,dt2,$scope.selectedUserType,$scope.selectedDAUser,
                    function(result, ev) {
                        if(ev.status) {
                            $timeout(function() {
                                console.log('::::result:::',result);
                                $scope.SummaryViewTable = result.summaryViewJsonData;
                                AllDataArrayForSummary = angular.copy(result.summaryViewJsonData);
                                
                                $scope.accountSnapshotDetails = result.timeSnapshotDetails;
                                
                                $scope.UserTimezoneValue = result.UserTimezoneValue;
                                $scope.conIdWithTimeEnteredCountMap = result.conIdWithTimeEnteredCountMap;
                                
                                //var totalSheetCnt = 0;
                                //var totalHrsCnt = 0;
                                
                                $scope.dayIdSet_ForCnt = [];
                                
                                for(var i = 0;i < AllDataArrayForSummary.length;i++) {
                                    if(AllDataArrayForSummary[i].status1) {
                                        if(AllDataArrayForSummary[i].status1 == 'Approved')
                                            AllDataArrayForSummary[i].colour1 = 'color: green;';
                                        else if(AllDataArrayForSummary[i].status1 == 'Rejected')
                                            AllDataArrayForSummary[i].colour1 = 'color: red;';
                                        
                                        if(AllDataArrayForSummary[i].status1 == 'Submitted') {
                                            //totalHrsCnt = parseFloat(totalHrsCnt) + parseFloat(AllDataArrayForSummary[i].Hours1);
                                            $scope.dayIdSet_ForCnt.push(AllDataArrayForSummary[i].Hrs1Day1Id);
                                        }
                                    }
                                    if(AllDataArrayForSummary[i].status2) {
                                        if(AllDataArrayForSummary[i].status2 == 'Approved')
                                            AllDataArrayForSummary[i].colour2 = 'color: green;';
                                        else if(AllDataArrayForSummary[i].status2 == 'Rejected')
                                            AllDataArrayForSummary[i].colour2 = 'color: red;';
                                        
                                        if(AllDataArrayForSummary[i].status2 == 'Submitted') {
                                            //totalHrsCnt = parseFloat(totalHrsCnt) + parseFloat(AllDataArrayForSummary[i].Hours2);
                                            $scope.dayIdSet_ForCnt.push(AllDataArrayForSummary[i].Hrs2Day2Id);
                                        }
                                    }
                                    if(AllDataArrayForSummary[i].status3) {
                                        if(AllDataArrayForSummary[i].status3 == 'Approved')
                                            AllDataArrayForSummary[i].colour3 = 'color: green;';
                                        else if(AllDataArrayForSummary[i].status3 == 'Rejected')
                                            AllDataArrayForSummary[i].colour3 = 'color: red;';
                                        
                                        if(AllDataArrayForSummary[i].status3 == 'Submitted') {
                                            //totalHrsCnt = parseFloat(totalHrsCnt) + parseFloat(AllDataArrayForSummary[i].Hours3);
                                            $scope.dayIdSet_ForCnt.push(AllDataArrayForSummary[i].Hrs3Day3Id);
                                        }
                                    }
                                    if(AllDataArrayForSummary[i].status4) {
                                        if(AllDataArrayForSummary[i].status4 == 'Approved')
                                            AllDataArrayForSummary[i].colour4 = 'color: green;';
                                        else if(AllDataArrayForSummary[i].status4 == 'Rejected')
                                            AllDataArrayForSummary[i].colour4 = 'color: red;';
                                        
                                        if(AllDataArrayForSummary[i].status4 == 'Submitted') {
                                            //totalHrsCnt = parseFloat(totalHrsCnt) + parseFloat(AllDataArrayForSummary[i].Hours4);
                                            $scope.dayIdSet_ForCnt.push(AllDataArrayForSummary[i].Hrs4Day4Id);
                                        }
                                    }
                                    if(AllDataArrayForSummary[i].status5) {
                                        if(AllDataArrayForSummary[i].status5 == 'Approved')
                                            AllDataArrayForSummary[i].colour5 = 'color: green;';
                                        else if(AllDataArrayForSummary[i].status5 == 'Rejected')
                                            AllDataArrayForSummary[i].colour5 = 'color: red;';
                                        
                                        if(AllDataArrayForSummary[i].status5 == 'Submitted') {
                                            //totalHrsCnt = parseFloat(totalHrsCnt) + parseFloat(AllDataArrayForSummary[i].Hours5);
                                            $scope.dayIdSet_ForCnt.push(AllDataArrayForSummary[i].Hrs5Day5Id);
                                        }
                                    }
                                    if(AllDataArrayForSummary[i].status6) {
                                        if(AllDataArrayForSummary[i].status6 == 'Approved')
                                            AllDataArrayForSummary[i].colour6 = 'color: green;';
                                        else if(AllDataArrayForSummary[i].status6 == 'Rejected')
                                            AllDataArrayForSummary[i].colour6 = 'color: red;';
                                        
                                        if(AllDataArrayForSummary[i].status6 == 'Submitted') {
                                            //totalHrsCnt = parseFloat(totalHrsCnt) + parseFloat(AllDataArrayForSummary[i].Hours6);
                                            $scope.dayIdSet_ForCnt.push(AllDataArrayForSummary[i].Hrs6Day6Id);
                                        }
                                    }
                                    if(AllDataArrayForSummary[i].status7) {
                                        if(AllDataArrayForSummary[i].status7 == 'Approved')
                                            AllDataArrayForSummary[i].colour7 = 'color: green;';
                                        else if(AllDataArrayForSummary[i].status7 == 'Rejected')
                                            AllDataArrayForSummary[i].colour7 = 'color: red;';
                                        
                                        if(AllDataArrayForSummary[i].status7 == 'Submitted') {
                                            //totalHrsCnt = parseFloat(totalHrsCnt) + parseFloat(AllDataArrayForSummary[i].Hours7);
                                            $scope.dayIdSet_ForCnt.push(AllDataArrayForSummary[i].Hrs7Day7Id);
                                        }
                                    }
                                    
                                    if(parseFloat(AllDataArrayForSummary[i].Hours1) != 0.00) AllDataArrayForSummary[i].size1 = 'font-weight: bolder;';
                                    if(parseFloat(AllDataArrayForSummary[i].Hours2) != 0.00) AllDataArrayForSummary[i].size2 = 'font-weight: bolder;';
                                    if(parseFloat(AllDataArrayForSummary[i].Hours3) != 0.00) AllDataArrayForSummary[i].size3 = 'font-weight: bolder;';
                                    if(parseFloat(AllDataArrayForSummary[i].Hours4) != 0.00) AllDataArrayForSummary[i].size4 = 'font-weight: bolder;';
                                    if(parseFloat(AllDataArrayForSummary[i].Hours5) != 0.00) AllDataArrayForSummary[i].size5 = 'font-weight: bolder;';
                                    if(parseFloat(AllDataArrayForSummary[i].Hours6) != 0.00) AllDataArrayForSummary[i].size6 = 'font-weight: bolder;';
                                    if(parseFloat(AllDataArrayForSummary[i].Hours7) != 0.00) AllDataArrayForSummary[i].size7 = 'font-weight: bolder;';
                                        
                                    // Forming project,Task,Payroll & Billable combination of single property
                                    var billableName = '';
                                    if(AllDataArrayForSummary[i].isBillable)
                                        billableName = 'Billable';
                                    else
                                        billableName = 'Non-billable';
                                        
                                    var locationName = '';
                                    if(AllDataArrayForSummary[i].locationName)
                                        locationName = AllDataArrayForSummary[i].locationName;
                                    else
                                        locationName =  'N/A';
                                    
                                    var uniqueValue = '';
                                    
                                    //if($scope.selectedUserType == 'Internal') {
                                        uniqueValue = AllDataArrayForSummary[i].ProjectName+' / '+AllDataArrayForSummary[i].ProjectTaskName+' / '+AllDataArrayForSummary[i].payRollItem+' / '+billableName+' / '+locationName;
                                    /*} else if($scope.selectedUserType == 'Instructor') {
                                        uniqueValue = AllDataArrayForSummary[i].ProjectName+' / '+AllDataArrayForSummary[i].ProjectTaskName+' / '+AllDataArrayForSummary[i].payRollItem;
                                        
                                        if(billableName == 'Non-billable')
                                            uniqueValue += ' / '+billableName+' / '+locationName;
                                        else
                                            uniqueValue += ' / '+locationName;
                                    }*/
                                    
                                    AllDataArrayForSummary[i].project_Task_Payroll_Billable_Location = uniqueValue;
                                    
                                }
                                
                                //console.log(':::::::totalHrsCnt::::',totalHrsCnt);
                                //$scope.totalHrsCount = totalHrsCnt.toFixed(2);
                                
                                $scope.dayDetailforSummaryMap = result.dayIddayRecordMap;
                                
                                /*var totalHrs = 0;
                                
                                for(var key in $scope.WeekRangeUserHrsCountMap) {
                                    if($scope.WeekRangeUserHrsCountMap.hasOwnProperty(key)) {
                                        totalHrs += $scope.WeekRangeUserHrsCountMap[key];
                                    }
                                }
                                console.log(':::::totalHrs:::::',totalHrs);
                                $scope.totalHrsCount = totalHrs;*/
                                
                                $scope.totalHrsCalculation(AllDataArrayForSummary);
                                
                                $scope.Filter();
                                
                                $timeout(function() {
                                    overAllupdateDataFormation();
                                    
                                },1000);
                                
                                 $timeout(function() {
                                    //flipOption = angular.copy($scope.selectedUserType);
                                    //ProjectRT = angular.copy($scope.multiSelectObj.selectedProjectRT);
                                    SPV = angular.copy($scope.selectedContactId);
                                    SWR = angular.copy($scope.selectedWeekrange);
                                },3000);
                                
                                document.getElementById("spinner").style.display = 'none';
                            });
                            
                        } else {
                            console.log('::::ev::::',ev);
                        }
                    },
                    {escape: true}
                ); 
            }
            
            // Get Instructor related time card day details
            function getInstrcutor_timeDetails() {
                document.getElementById("spinner").style.display = 'block';
                
                console.log('::::selectedUserType:::::::::',$scope.selectedUserType);
                console.log('::::selectedWeekrange:::::::::',$scope.selectedWeekrange);
                
                $scope.selectedWeekrange = '';
                
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.supervisorTimeApproval_Ctrl.getInstructor_WholeWeekValues}',
                    $scope.selectedDAUser,
                    function(result, ev) {
                        if(ev.status) {
                            $timeout(function(){
                                console.log('::::result:::getInstrcutor_timeDetails:::',result);
                                
                                //$scope.SummaryViewTable = result.summaryViewJsonData;
                                //AllDataArrayForSummary = angular.copy(result.summaryViewJsonData);
                                $scope.dayDetailforSummaryMap = result.dayIddayRecordMap;
                                
                                $scope.weekRangeList = result.weekRangeValues;                                
                                
                                var lastIndex = $scope.weekRangeList.length;
                                
                                // Apply url values for latest modification display
                                
                                if($scope.urlValues.urlWeekrange && $scope.weekRangeList.indexOf($scope.selectedWeekrange) != -1) {
                                    $scope.selectedWeekrange = $scope.urlValues.urlWeekrange;
                                }else {
                                    $scope.selectedWeekrange = $scope.weekRangeList[lastIndex - 1];
                                }
                                
                                console.log(':::::$scope.weekRangeList::getInstrcutor_timeDetails:::',$scope.weekRangeList);
                                console.log(':::::$scope.selectedWeekrange::getInstrcutor_timeDetails:::',$scope.selectedWeekrange);
                                
                                $scope.WeekRangeUserHrsCountMap = result.WeekRangeUserId_HrsCountMap;
                                
                                $scope.totalSheetWaitingCount = Object.keys($scope.WeekRangeUserHrsCountMap).length;
                                
                                var totalHrs = 0;
                                
                                for(var key in $scope.WeekRangeUserHrsCountMap) {
                                    if($scope.WeekRangeUserHrsCountMap.hasOwnProperty(key)) {
                                        totalHrs += $scope.WeekRangeUserHrsCountMap[key];
                                    }
                                }
                                console.log(':::::totalHrs:::getInstrcutor_timeDetails::',totalHrs);
                                $scope.totalHrsCount = totalHrs;
                                
                                $timeout(function() {
                                    
                                    if($scope.selectedWeekrange) {
                                        $scope.getSummarydetails_ForWeekRange();
                                    } else {
                                        $scope.MsgDisplay = false;
                                        $scope.summaryDetailtabel = false; 
                                        $scope.NotesSectionDisplay = false;
                                        $scope.RecTypeMTSelectShow = false;
                                        document.getElementById("spinner").style.display = 'none';
                                    }
                                },1000);
                                
                            });
                            
                        } else {
                            console.log('::::ev::::',ev);
                        }
                    },
                    {escape: true}
                ); 
            }
            
            // this method to calculate total Hrs on Row level
            
            $scope.totalHrsCalculation = function(record) {
            
                for(var i = 0;i < record.length;i++) {
                
                    var hrs = 0;
                    
                    if($.isNumeric(record[i].Hours1)){
                        if(isNaN(record[i].Hours1)) {
                        
                        }else if(record[i].Hours1 != null) {
                            //console.log('hrs 1');
                            hrs = parseFloat(record[i].Hours1) + parseFloat(hrs);
                        }
                    }   
                    if($.isNumeric(record[i].Hours2)){
                        if(isNaN(record[i].Hours2)) {
                        
                        }else if(record[i].Hours2 != null) {
                            //console.log('hrs 2');
                            hrs = parseFloat(record[i].Hours2) + parseFloat(hrs);
                        }
                    }
                    if($.isNumeric(record[i].Hours3)){
                        if(isNaN(record[i].Hours3)) {
                        
                        }else if(record[i].Hours3 != null) {
                            //console.log('hrs 3');
                            hrs = parseFloat(record[i].Hours3) + parseFloat(hrs);
                        }
                    }   
                    if($.isNumeric(record[i].Hours4)){
                        if(isNaN(record[i].Hours4)) {
                        
                        }else if(record[i].Hours4 != null) {
                            //console.log('hrs 4');
                            hrs = parseFloat(record[i].Hours4) + parseFloat(hrs);
                        }
                    }   
                    if($.isNumeric(record[i].Hours5)){
                        if(isNaN(record[i].Hours5)) {
                        
                        }else if(record[i].Hours5 != null) {
                            //console.log('hrs 5');
                            hrs = parseFloat(record[i].Hours5) + parseFloat(hrs);
                        }
                    }   
                    if($.isNumeric(record[i].Hours6)){
                        if(isNaN(record[i].Hours6)) {
                        
                        }else if(record[i].Hours6 != null) {
                            //console.log('hrs 6');
                            hrs = parseFloat(record[i].Hours6) + parseFloat(hrs);
                        }
                    }   
                    if($.isNumeric(record[i].Hours7)){
                        if(isNaN(record[i].Hours7)) {
                        
                        }else if(record[i].Hours7 != null) {
                            //console.log('hrs 7');
                            hrs = parseFloat(record[i].Hours7) + parseFloat(hrs);
                        }
                    }    
                    //console.log('::::hrs:::::',hrs);
                    record[i].TotalHours = hrs.toFixed(2);
                
                }
                
                //console.log('::::record:::::',record);
            }
            
            // This below function to calculate total hrs on Column level
            
            $scope.getHoursSumValues = function(records,Hrskey,dateKey,dateValue) {
                
                if(records) {
                    var sum = 0;
                    for(var i = 0; i < records.length; i++) {
                        if(records[i][dateKey] == new Date(dateValue).getTime() && records[i][Hrskey]) {
                            sum = sum + parseFloat(records[i][Hrskey]);
                        }
                    }
                    return ((sum * 100) / 100).toFixed(2);
                }
            }
            
            // This is to calculate overall total hrs
            $scope.totalhours = function(records) {
               
               var sum = 0;
               
               if(records) {
                   for(var i = 0; i < records.length; i++) {
                       
                       if(records[i].Hours1) {
                           sum = sum + parseFloat(records[i].Hours1);
                       }
                       if(records[i].Hours2) {
                           sum = sum + parseFloat(records[i].Hours2);
                       }
                       if(records[i].Hours3) {
                           sum = sum + parseFloat(records[i].Hours3);
                       }
                       if(records[i].Hours4) {
                           sum = sum + parseFloat(records[i].Hours4);
                       }
                       if(records[i].Hours5) {
                           sum = sum + parseFloat(records[i].Hours5);
                       }
                       if(records[i].Hours6) {
                           sum = sum + parseFloat(records[i].Hours6);
                       }
                       if(records[i].Hours7) {
                           sum = sum + parseFloat(records[i].Hours7);
                       }
                   }
               }
               
               return ((sum * 100) / 100).toFixed(2);
           }
           
           function millisecondToString(millisecond) {
                var date = new Date(millisecond);            
                date.setTime(date.getTime() + date.getTimezoneOffset()*1000*60); // To fix the time zone issue.from 2012/6/31 to 2012/7/1 
                var day = date.getDate();
                var month = date.getMonth() + 1;
                if(day < 10) {
                    day = '0' + day;
                }
                if(month < 10) {
                    month = '0' + month;
                }
                return date.getFullYear() + '-' +month + '-' + day;
            }
            
            $scope.cancel = function() {
                
                var isSitepage = false;
                if('{!$Site.Name}' != '') {
                    isSitepage = true;
                }
                
                var uiTheme = '{!$User.UIThemeDisplayed}';
                if(!isSitepage) {
                    window.location.href = '/home/home.jsp';
                }else {
                    if(uiTheme == 'Theme4d' || uiTheme == 'Theme4t'){
                        var urlPrefix = '{!$Label.Community_Site_Prefix}';
                        sforce.one.navigateToURL(urlPrefix+'/s/');
                    }else {
                        window.location.href = '/s';
                    }
                }
            }
            
            $scope.detailViewFunction = function() {
                //$scope.KeyValue = key;
                if($scope.contactList[$scope.selectedContactId])
                    $scope.SelectedName = $scope.contactList[$scope.selectedContactId];
                
                $scope.weekRangeFilterShow = true;
                
                if(Object.keys($scope.contactList).length > 0)
                    $scope.summaryDetailtabel = true;
                else
                    $scope.summaryDetailtabel = false;
                
                if(Object.keys($scope.contactList).length > 0) {
                    $scope.MsgDisplay = true;
                    $scope.titlegroup = true;
                }else {
                    $scope.MsgDisplay = false;
                }
            }
            
            $scope.tableViewChangeFunction = function() {
                var name = '';
                for(var key in $scope.contactList) {
                    //name = $scope.contactList[key].Name;
                    name = key;
                    break;
                }
                $scope.selectedContactId = name;
                
                $scope.displaytabel = false;
                $scope.summaryDetailtabel = true;
            }
            
            // This function for Summary table group by Function
            
            function summaryGroupbyFunction(records) {
                commentFormationList = [];
                $scope.dayIdsForSnapshot = [];
                    
                $scope.contactList = {};
                $scope.detailList = {};
                
                $scope.summaryDetailtabel = false;
                
                for(var i = 0;i < records.length;i++) {
                    
                    if(!$scope.contactList[records[i].InstructorId]){
                        $scope.contactList[records[i].InstructorId] = records[i].Instructor;
                    }
                    
                    if($scope.detailList[records[i].InstructorId] == undefined)
                        $scope.detailList[records[i].InstructorId] = [];
                    $scope.detailList[records[i].InstructorId].push(records[i]);
                }
                
                var contactId = '';
                for(var key in $scope.contactList) {
                    contactId = key;
                    break;
                }
                
                var timesheetAwaiting = 0;
                var timesheetApproved = 0;
                var approvedBoolean = false;
                
                $scope.contactIdCountMap = {};
                
                for(var key in $scope.detailList) {
                    
                    var totalRecCnt_PerContact = 0;
                    var totalWaitingCnt = 0;
                    
                    if($scope.detailList.hasOwnProperty(key)) {
                        
                        for(var i = 0;i < $scope.detailList[key].length;i++) {
                            
                            if($scope.detailList[key][i].status1) {
                                
                                if($scope.detailList[key][i].status1 == 'Approved'){
                                    approvedBoolean = true;
                                } else {
                                    approvedBoolean = false;
                                    totalWaitingCnt = totalWaitingCnt + 1;
                                }
                                
                                totalRecCnt_PerContact = totalRecCnt_PerContact + 1;
                            }
                            if($scope.detailList[key][i].status2) {
                                if($scope.detailList[key][i].status2 == 'Approved'){
                                    approvedBoolean = true;
                                } else {
                                    approvedBoolean = false;
                                    totalWaitingCnt = totalWaitingCnt + 1;
                                }
                                    
                                totalRecCnt_PerContact = totalRecCnt_PerContact + 1;
                            }
                            if($scope.detailList[key][i].status3) {
                                if($scope.detailList[key][i].status3 == 'Approved'){
                                    approvedBoolean = true;
                                } else {
                                    approvedBoolean = false;
                                    totalWaitingCnt = totalWaitingCnt + 1;
                                }
                                    
                                totalRecCnt_PerContact = totalRecCnt_PerContact + 1;
                            }
                            if($scope.detailList[key][i].status4) {
                                if($scope.detailList[key][i].status4 == 'Approved'){
                                    approvedBoolean = true;
                                }else {
                                    approvedBoolean = false;
                                    totalWaitingCnt = totalWaitingCnt + 1;
                                }
                                    
                                totalRecCnt_PerContact = totalRecCnt_PerContact + 1;
                            }
                            if($scope.detailList[key][i].status5) {
                                if($scope.detailList[key][i].status5 == 'Approved'){
                                    approvedBoolean = true;
                                } else {
                                    approvedBoolean = false;
                                    totalWaitingCnt = totalWaitingCnt + 1;
                                }
                                    
                                totalRecCnt_PerContact = totalRecCnt_PerContact + 1;
                            }
                            if($scope.detailList[key][i].status6) {
                                if($scope.detailList[key][i].status6 == 'Approved') {
                                    approvedBoolean = true;
                                } else {
                                    approvedBoolean = false;
                                    totalWaitingCnt = totalWaitingCnt + 1;
                                }
                                    
                                totalRecCnt_PerContact = totalRecCnt_PerContact + 1;
                            }
                            if($scope.detailList[key][i].status7) {
                                if($scope.detailList[key][i].status7 == 'Approved'){
                                    approvedBoolean = true;
                                } else {
                                    approvedBoolean = false;
                                    totalWaitingCnt = totalWaitingCnt + 1;
                                }
                                    
                                totalRecCnt_PerContact = totalRecCnt_PerContact + 1;
                            }
                            
                            // Get time card day Ids for Notes section formation
                            if($scope.detailList[key][i].Hrs1Day1Id) $scope.dayIdsForSnapshot.push($scope.detailList[key][i].Hrs1Day1Id);
                            if($scope.detailList[key][i].Hrs2Day2Id) $scope.dayIdsForSnapshot.push($scope.detailList[key][i].Hrs2Day2Id);
                            if($scope.detailList[key][i].Hrs3Day3Id) $scope.dayIdsForSnapshot.push($scope.detailList[key][i].Hrs3Day3Id);
                            if($scope.detailList[key][i].Hrs4Day4Id) $scope.dayIdsForSnapshot.push($scope.detailList[key][i].Hrs4Day4Id);
                            if($scope.detailList[key][i].Hrs5Day5Id) $scope.dayIdsForSnapshot.push($scope.detailList[key][i].Hrs5Day5Id);
                            if($scope.detailList[key][i].Hrs6Day6Id) $scope.dayIdsForSnapshot.push($scope.detailList[key][i].Hrs6Day6Id);
                            if($scope.detailList[key][i].Hrs7Day7Id) $scope.dayIdsForSnapshot.push($scope.detailList[key][i].Hrs7Day7Id);
                            
                        }
                        
                        if(approvedBoolean) {
                            timesheetApproved = timesheetApproved + 1;
                        } else {
                            timesheetAwaiting = timesheetAwaiting + 1;
                        }
                        
                        if(!$scope.contactIdCountMap[key]) {
                            $scope.contactIdCountMap[key] = {RecordCnt:totalRecCnt_PerContact,WaitingCnt:totalWaitingCnt};
                        }
                    }
                }
                
                console.log(':::::$scope.contactIdCountMap:::::::',$scope.contactIdCountMap);
                console.log(':::::::::timesheetAwaiting,timesheetApproved:::::::',timesheetAwaiting,timesheetApproved);
                
                //$scope.totalSheetWaitingCount = timesheetAwaiting;
                //$scope.totalsheetApprovedCnt = timesheetApproved;
                
                $scope.weekRangeFilterShow = true;
                
                if(Object.keys($scope.contactList).length > 0) {
                    
                    $scope.MsgDisplay = true;
                    $scope.summaryDetailtabel = true;
                    $scope.selectedContactId = contactId;
                    $scope.summarycolumn1 = false;
                    
                    if($scope.contactList[$scope.selectedContactId])
                        $scope.SelectedName = $scope.contactList[$scope.selectedContactId];
                    
                    $scope.titlegroup = true;
                }else {
                    $scope.MsgDisplay = false;
                    $scope.summaryDetailtabel = false;
                }
                
                /*if($scope.selectedUserType == 'Internal')
                    $scope.RecTypeMTSelectShow = true;
                else if($scope.selectedUserType == 'Instructor')
                    $scope.RecTypeMTSelectShow = false;*/
                
                FormNotesSection();
                //console.log('::::$scope.contactList::;;;;;;',$scope.contactList);
                //console.log('::::$scope.detailList::;;;;;;',$scope.detailList);
            }
            
            function FormNotesSection() {
                
                $scope.commentsList = [];
                commentFormationList = [];
                
                for(var i = 0;i < $scope.accountSnapshotDetails.length;i++) {
                
                    if($scope.accountSnapshotDetails[i].Time_Card_Day__c && $scope.accountSnapshotDetails[i].Time_Card_Line__c && $scope.accountSnapshotDetails[i].Time_Card_Line__r.AcctSeed__Time_Card__c
                            && $scope.accountSnapshotDetails[i].Time_Card_Line__r.AcctSeed__Time_Card__r.Intructor__c == $scope.selectedContactId 
                            && ($scope.accountSnapshotDetails[i].Internal_Comment__c != null || $scope.accountSnapshotDetails[i].Notes__c != null)
                       ) {
                        var commentObj = {
                            UserName: $scope.accountSnapshotDetails[i].CreatedBy.Name,
                            Edited: millisecondToDateTimeString($scope.accountSnapshotDetails[i].CreatedDate),
                            ChargeCode: $scope.accountSnapshotDetails[i].Time_Card_Line__r.AcctSeed__Project_Task__r.AcctSeed__Project__r.Name,
                            TaskName: $scope.accountSnapshotDetails[i].Time_Card_Line__r.AcctSeed__Project_Task__r.Name,
                            NewHrs: $scope.accountSnapshotDetails[i].Time_Card_Day__r.Total_Hours_Before_Approved__c,
                            OldHrs: $scope.accountSnapshotDetails[i].Total_Hours_Before_Approved__c,
                            OldStatus: $scope.accountSnapshotDetails[i].TCD_Status__c,
                            Comment: $scope.accountSnapshotDetails[i].Internal_Comment__c != null ? $scope.accountSnapshotDetails[i].Internal_Comment__c : $scope.accountSnapshotDetails[i].Notes__c,
                            Date: $scope.accountSnapshotDetails[i].Date__c,
                            ReferenceId: $scope.accountSnapshotDetails[i].Reference_Id__c,
                            NewStatus: $scope.accountSnapshotDetails[i].TCD_New_Status__c,
                            createdDate: $scope.accountSnapshotDetails[i].CreatedDate
                        };
                        
                        commentFormationList.push(commentObj);
                    }
                    
                }
                
                var commentMap = {};
                for(var i = 0;i < commentFormationList.length;i++) {
                    if(!commentFormationList[i].ReferenceId) {
                        if(commentFormationList[i].Edited){
                            var format1 = commentFormationList[i].Edited.split(' ')[0].split('-')[1]+'/'+commentFormationList[i].Edited.split(' ')[0].split('-')[2]+'/'+commentFormationList[i].Edited.split(' ')[0].split('-')[0];
                            var format2 = commentFormationList[i].Edited.split(' ')[1].split(':')[0]+':'+commentFormationList[i].Edited.split(' ')[1].split(':')[1];
                            
                            commentFormationList[i].DateTime = format1+commentFormationList[i].Edited.split(' ')[1]+commentFormationList[i].Edited.split(' ')[2];
                        }
                        
                        $scope.commentsList.push(commentFormationList[i]);
                    }else {
                        if(!commentMap[commentFormationList[i].ReferenceId]) {
                            commentMap[commentFormationList[i].ReferenceId] = [];
                            var rec = commentFormationList[i];
                            rec.ChargeCode = '';
                            rec.Edited = '';
                            rec.TaskName = '';
                            rec.Date = '';
                            rec.NewHrs = '';
                            rec.OldHrs = '';
                            rec.OldStatus = '';
                            rec.NewStatus = '';
                            rec.DateTime = commentFormationList[i].ReferenceId.split(' ')[1]+commentFormationList[i].ReferenceId.split(' ')[2]+commentFormationList[i].ReferenceId.split(' ')[3];
                            $scope.commentsList.push(rec);
                        } else {
                            commentMap[commentFormationList[i].ReferenceId].push(commentFormationList[i]);
                        } 
                    }
                }
                //console.log('::::::::$scope.accountSnapshotDetails:::::::',$scope.accountSnapshotDetails.length);
                console.log(':::::$scope.commentsList:::dhfagdaj:::',JSON.stringify($scope.commentsList));
                //console.log('::::::commentMap::::::::',commentMap);
                
                if($scope.commentsList.length > 0)
                    $scope.NotesSectionDisplay = false;
                else
                    $scope.NotesSectionDisplay = true;
            }
            
            function millisecondToDateTimeString(millisecond) {
                return moment.tz(millisecond, $scope.UserTimezoneValue).format('YYYY-MM-DD h:mm:ss a');
            }

            $scope.CommandBoxOpenFunction = function(data,tableName,loopList) {
                $scope.dataObject = {};
                $scope.modalBackdropState1 = "slds-modal-backdrop--open";
                $scope.modalState1 = "slds-fade-in-open";
                $scope.dataObject = data;
                $scope.fromTabelName = tableName;
                $scope.wholeDateList = loopList;
                
                console.log(':::::tableName::::::',tableName);
            }
            $scope.rejectAfterReasonEnter = function() {
                document.getElementById("spinner").style.display = 'block';
                $scope.modalBackdropState1 = "";
                $scope.modalState1 = "";
                $scope.RejectButtonClickFunction();
            }
            $scope.closefunction = function() {
                $scope.modalBackdropState1 = "";
                $scope.modalState1 = "";
            }

            $scope.OkayClickFunction = function() {
            
                if($scope.fromTabelName == 'fromDisplay'){
                    $scope.displaylist.splice($scope.wholeDateList.indexOf($scope.dataObject),1);
                
                }else if($scope.fromTabelName == 'fromGroupBy'){
                    console.log('::::fromGroupBy:::::::',$scope.dataObject.InstructorId);
                    console.log('::::fromGroupBy:::::::',$scope.detailList[$scope.dataObject.InstructorId]);
                    $scope.detailList[$scope.dataObject.InstructorId].splice($scope.wholeDateList.indexOf($scope.dataObject),1);
                    
                }else if($scope.fromTabelName == 'fromDetail') {
                    console.log('::::fromDetail:::::::',$scope.detailList[$scope.dataObject.InstructorId]);
                    $scope.detailList[$scope.dataObject.InstructorId].splice($scope.wholeDateList.indexOf($scope.dataObject),1);
                
                }else {
                    
                    // Modified the below code to for lightning staff community usage
                    // By NS on Nov 3 2018
                    
                    if(!$scope.errorOccured) {
                        
                        var uiTheme = '{!$User.UIThemeDisplayed}';
                        var isSite = '{!$Site.Name}';
                        
                        if(!isSite) {
                            if($scope.selectedDAUser == '--None--') {
                                window.location.href = '/apex/TimeSheet_Internals?UserType='+$scope.selectedUserType+'&WeekRange='+$scope.selectedWeekrange;
                            } else {
                                window.location.href = '/apex/TimeSheet_Internals?UserType='+$scope.selectedUserType+'&WeekRange='+$scope.selectedWeekrange+'&DAUser='+$scope.selectedDAUser;
                            }
                        }else {
                        
                            if(uiTheme == 'Theme4d' || uiTheme == 'Theme4t'){
                                var urlPrefix = '{!$Label.Community_Site_Prefix}';
                                
                                if($scope.selectedDAUser == '--None--') {
                                    sforce.one.navigateToURL('/staff/apex/Timesheet_Approval_Page_SC?UserType='+$scope.selectedUserType+'&WeekRange='+$scope.selectedWeekrange);
                                }else {
                                    sforce.one.navigateToURL('/staff/apex/Timesheet_Approval_Page_SC?UserType='+$scope.selectedUserType+'&WeekRange='+$scope.selectedWeekrange+'&DAUser='+$scope.selectedDAUser);
                                }
                                
                            }else {
                                if($scope.selectedDAUser == '--None--') {
                                    window.location.href = '/staff/apex/Timesheet_Approval_Page_SC?UserType='+$scope.selectedUserType+'&WeekRange='+$scope.selectedWeekrange;
                                } else {
                                    window.location.href = '/staff/apex/Timesheet_Approval_Page_SC?UserType='+$scope.selectedUserType+'&WeekRange='+$scope.selectedWeekrange+'&DAUser='+$scope.selectedDAUser;
                                }
                            }
                        }
                    }
                }
                
                $scope.modalStateVariable = "";
                $scope.modalBackdrop = "";
            }

            $scope.ApproveButtonClickFunciton = function(data,tableName,loopList) {
                document.getElementById("spinner").style.display = 'block';
                
                $scope.dataObject = data;
                $scope.fromTabelName = tableName;
                $scope.wholeDateList = loopList;
                
                var hours = data.HrsBeforedApproved;
                var updateRec = [];
                updateRec.push({Id:data.timeDayId,Status__c:'Approved',AcctSeed__Hours__c:hours,Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                
                dayRecordupdationCall(updateRec,'Approve');
            }

            $scope.RejectButtonClickFunction = function() {
                var updateRec = [];
                updateRec.push({Id:$scope.dataObject.timeDayId,AcctSeed__Invoice_Comment__c:$scope.Comment,Status__c:'Rejected',Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                
                dayRecordupdationCall(updateRec,'Reject');
            }
            
            function QueryProjectRecordTypes() {
            
                var recordtypeQry = 'SELECT Id,Name,DeveloperName FROM RecordType WHERE SobjectType = \'AcctSeed__Project__c\'';
                force.query(recordtypeQry, function(data) {
                   
                    $timeout(function(){
                        $scope.RecordTypeValues = data.records;
                        $scope.multiSelectObj.RecordTypeFilterList = [];
                        
                        for(var i = 0;i < $scope.RecordTypeValues.length;i++) {
                            $scope.multiSelectObj.RecordTypeFilterList.push($scope.RecordTypeValues[i].Name);
                        }
                        $scope.multiSelectObj.RecordTypeFilterList.unshift('All');
                        
                        //$scope.multiSelectObj.selectedProjectRT = 'All';
                        //$scope.RecTypeMTSelectShow = true;
                    
                    });
                }, function(data) {
                console.log('error for recordtypeQry'+JSON.stringify(data));
                });
            }
            
            // Filter for recprdtype
            $scope.Filter = function() {
                
                $scope.urlValues = {};
                
                /*if($scope.multiSelectObj.selectedProjectRT && $scope.multiSelectObj.selectedProjectRT != 'All') {
                    var stages = $scope.multiSelectObj.selectedProjectRT.split(';');
                    
                    // This below code for Summary table filter function
                    
                    var SummaryfilteredData = _.filter(AllDataArrayForSummary,function(data){ 
                        return _.find(stages, function(record) {
                            return _.find($scope.RecordTypeValues,function(RTvalue) {
                                if(RTvalue.Name == record)
                                    return data.ProjectRTId == RTvalue.Id;
                            });
                        });
                    });
                    
                    console.log(':::::::SummaryfilteredData::::::',SummaryfilteredData);
                    
                    console.log(':::summaryFilterData:::::::leng:::',summaryFilterData.length > 0);
                    if(SummaryfilteredData.length > 0) {
                        $scope.MsgDisplay = true;
                        summaryGroupbyFunction(angular.copy(SummaryfilteredData));
                    } else {
                        $scope.MsgDisplay = false;
                        $scope.summaryDetailtabel = false;
                        $scope.weekRangeFilterShow = true;
                        $scope.NotesSectionDisplay = true;
                    }
                }else {*/
                    $scope.MsgDisplay = true;
                    /*if($scope.selectedUserType == 'Internal') {
                        var summaryFilterData = _.filter(AllDataArrayForSummary, function(data){ 
                            if(data.UserType == $scope.selectedUserType)
                                return data; 
                        });
                        enable_DisableTableValues(summaryFilterData);
                        
                    }else if($scope.selectedUserType == 'Instructor') {
                      
                        var summaryFilterData = _.filter(AllDataArrayForSummary, function(data){ 
                            if(data.UserType == $scope.selectedUserType)
                                return data; 
                        });
                        enable_DisableTableValues(summaryFilterData);
                    }*/
                    
                    enable_DisableTableValues(AllDataArrayForSummary);
                //}
            }
            
            $scope.UserTypeFilter = function() {
                
                $scope.urlValues = {};
                
                //console.log(':::::::AllDataArray:::::',AllDataArray);
                if($scope.selectedUserType == 'Internal') {
                    getTimeCardMethod();
                   
                }else if($scope.selectedUserType == 'Instructor') {
                    getInstrcutor_timeDetails();
                }
            }
            
            function enable_DisableTableValues(summaryFilterData) {
                if(summaryFilterData.length > 0) {
                    summaryGroupbyFunction(angular.copy(summaryFilterData));
                    $scope.MsgDisplay = true;
                }else {
                    $scope.MsgDisplay = false;
                    $scope.summaryDetailtabel = false; 
                    $scope.weekRangeFilterShow = true;
                    $scope.NotesSectionDisplay = false;
                    
                    /*if($scope.selectedUserType == 'Instructor')
                        $scope.RecTypeMTSelectShow = false;
                    else
                        $scope.RecTypeMTSelectShow = true;*/
                }
            }
            
            // Added by sukanya on November 30 2016 for Project Record Type multi select
            
            $scope.onDropDownClosed = function(values) {
                //$scope.Filter();
                $scope.displayConfirmationWindow('Filter');
            }
            
            // Added blow code for Summary details model open - JAN 18 2017
            
            $scope.SummaryModelOpen = function(record,dayIdtype,colorType) {
                
                $scope.daysummaryDetail = [];
                $scope.selectedRec = {};
                $scope.colorType = colorType;
                
                if(record[dayIdtype] && $scope.dayDetailforSummaryMap[record[dayIdtype]] != null) {
                    var obj = {};
                    obj = $scope.dayDetailforSummaryMap[record[dayIdtype]];
                    obj.ProjectName = record.ProjectName;
                    obj.TaskName = record.ProjectTaskName;
                    obj.ProjectId = record.ProjectId;
                    obj.TaskId = record.ProjectTaskId;
                    obj.billable = record.isBillable;
                    
                    $scope.daysummaryDetail.push(obj);
                    
                    //console.log(':::::$scope.daysummaryDetail::::::::',$scope.daysummaryDetail);
                    
                    $scope.modalStateForSummary = 'slds-fade-in-open';
                    $scope.modalBackdropStateForSummary = 'slds-modal-backdrop--open';
                    
                    $scope.selectedRec = record;
                    
                    console.log('::::::::$scope.selectedRec:::::',$scope.selectedRec);
                }
            }
           
            
            // Added by Sukanya on JAN 21 2017 for individual records approve & reject operation
            
            $scope.approvedRecList = [];
            $scope.RejectedRecList = [];
            var approve_RejectrecIds = [];
            
            $scope.approvalHrsCount = 0;
            $scope.rejectedHrsCount = 0;
            $scope.overAllpendingHrs = 0;
            
            var approveHrsCnt = 0;
            var rejectHrsCount = 0;
            
            var approve = [];
            var reject = [];
            
            $scope.summaryApproveClick = function(record) {
                
                if(approve.indexOf(record) == -1) {
                    approve.push(record);
                    
                    var obj = {};
                    obj = {Id:record.Id,
                               Status__c:'Approved',
                               AcctSeed__Hours__c:record.Total_Hours_Before_Approved__c,
                               Approved_Date__c:currentDate,
                               Approved_by__c:$scope.userId
                            };
                    
                    if(approve_RejectrecIds.indexOf(record.Id) == -1) {
                        $scope.approvedRecList.push(obj);
                    }
                        
                    if(reject.indexOf(record) == -1) {
                        approveHrsCnt = approveHrsCnt + record.Total_Hours_Before_Approved__c;
                    }else {
                        approveHrsCnt = approveHrsCnt + record.Total_Hours_Before_Approved__c;
                        
                        reject.splice(reject.indexOf(record),1);
                        rejectHrsCount = rejectHrsCount - record.Total_Hours_Before_Approved__c;
                    }
                    
                    if(approve_RejectrecIds.indexOf(record.Id) == -1){
                        approve_RejectrecIds.push(record.Id);
                    }
                    
                    $scope.selectedRec[$scope.colorType] = 'color: green;';
                    
                    // BELOW TO DIAPLY # OF COUNTS FOR APPROVAL
                    
                    //console.log('::::inside::::Approve:::::::::',$scope.contactIdCountMap[$scope.selectedRec.InstructorId]);
                    
                    if($scope.contactIdCountMap[$scope.selectedRec.InstructorId]) {
                        
                        var awaiting = $scope.contactIdCountMap[$scope.selectedRec.InstructorId].WaitingCnt;
                        var recCnt = $scope.contactIdCountMap[$scope.selectedRec.InstructorId].RecordCnt;
                        
                        if(awaiting != 0) {
                            awaiting = awaiting - 1;
                        }
                        
                        if(awaiting == 0) {
                            $scope.totalsheetApprovedCnt = $scope.totalsheetApprovedCnt + 1;
                            $scope.totalSheetWaitingCount = $scope.totalSheetWaitingCount - 1;
                        }
                        
                        $scope.contactIdCountMap[$scope.selectedRec.InstructorId].WaitingCnt = awaiting;
                    }
                    
                    if($scope.totalHrsCount != 0) {
                        $scope.totalHrsCount = parseFloat($scope.totalHrsCount) - parseFloat(record.Total_Hours_Before_Approved__c);
                        
                        if($scope.dayIdSet_ForCnt.indexOf(record.Id) != -1) {
                            var index = $scope.dayIdSet_ForCnt.indexOf(record.Id);
                            $scope.dayIdSet_ForCnt.splice(index,1);
                        }
                            
                    }
                    
                    //Check for already Aprpoved hrs & Id sets
                    
                    if(alreadyApprovedIds.indexOf(record.Id) != -1) {
                        alreadyApprovedHrs = parseFloat(alreadyApprovedHrs) - parseFloat(record.Total_Hours_Before_Approved__c);
                        var index = alreadyApprovedIds.indexOf(record.Id);
                        alreadyApprovedIds.splice(index,1);
                    }
                        
                    console.log('::::inside::approve:::::',$scope.totalHrsCount);
                }
                
                console.log('::::inside::::Approve::::approve,wait:::::',$scope.totalsheetApprovedCnt,$scope.totalSheetWaitingCount);
                console.log(':::::::::contactIdCountMAp::::::::::',$scope.contactIdCountMap[$scope.selectedRec.InstructorId]);
                
                $scope.modalStateForSummary = '';
                $scope.modalBackdropStateForSummary = '';
                
                //console.log(':::::approve::::::::',$scope.approvedRecList,approveHrsCnt,approve_RejectrecIds);
            }
            
            $scope.summaryRejectClick = function(record) {
                $scope.summaryComment = '';
                $scope.rejectRec = record;
                
                $scope.modalStateReject = 'slds-fade-in-open';
                $scope.modalBackdropStateReject = 'slds-modal-backdrop--open';
                
                $scope.modalStateForSummary = '';
                $scope.modalBackdropStateForSummary = '';
                
                //reject.push(record);
                //$scope.rejectedHrsCount = $scope.rejectedHrsCount + record.Total_Hours_Before_Approved__c;
            }
            
            $scope.summaryRejectreasonEntered = function() {
            
                if($scope.summaryComment) {
                
                    if(reject.indexOf($scope.rejectRec) == -1) {
                        //$scope.rejectRec.AcctSeed__Invoice_Comment__c = $scope.summaryComment;
                        reject.push($scope.rejectRec);
                        
                        var Obj = {};
                        Obj = {Id:$scope.rejectRec.Id,
                                    Status__c:'Rejected',
                                    AcctSeed__Invoice_Comment__c:$scope.summaryComment,
                                    Approved_Date__c:currentDate,
                                    Approved_by__c:$scope.userId
                                };
                        
                        if(approve_RejectrecIds.indexOf($scope.rejectRec.Id) == -1) {
                            $scope.RejectedRecList.push(Obj);
                        }
                        
                        if(approve.indexOf($scope.rejectRec) == -1) {
                            rejectHrsCount = rejectHrsCount + $scope.rejectRec.Total_Hours_Before_Approved__c;
                        }else {
                            rejectHrsCount = rejectHrsCount + $scope.rejectRec.Total_Hours_Before_Approved__c;
                            
                            approve.splice(approve.indexOf($scope.rejectRec),1);
                            approveHrsCnt = approveHrsCnt - $scope.rejectRec.Total_Hours_Before_Approved__c;
                        }
                        
                        if(approve_RejectrecIds.indexOf($scope.rejectRec.Id) == -1){
                            approve_RejectrecIds.push($scope.rejectRec.Id);
                        }
                        
                        $scope.selectedRec[$scope.colorType] = 'color: red;';
                        
                        // BELOW TO DIAPLY # OF COUNTS FOR APPROVAL
                        
                        console.log('::::inside::::reject:::::::::',$scope.contactIdCountMap[$scope.selectedRec.InstructorId]);
                        
                        if($scope.contactIdCountMap[$scope.selectedRec.InstructorId]){
                        
                            var awaiting = $scope.contactIdCountMap[$scope.selectedRec.InstructorId].WaitingCnt;
                            var recCnt = $scope.contactIdCountMap[$scope.selectedRec.InstructorId].RecordCnt;
                            
                            if(awaiting == 0) {
                                awaiting = awaiting + 1;
                                
                                $scope.totalSheetWaitingCount = $scope.totalSheetWaitingCount + 1;
                                $scope.totalsheetApprovedCnt = $scope.totalsheetApprovedCnt - 1;
                                
                                $scope.contactIdCountMap[$scope.selectedRec.InstructorId].WaitingCnt = awaiting;
                                
                            }else {
                               awaiting = awaiting + 1; 
                               $scope.contactIdCountMap[$scope.selectedRec.InstructorId].WaitingCnt = awaiting;
                            }
                        }
                    }
                    //console.log('::::inside::::reject::::wait,aprove:::::',$scope.totalSheetWaitingCount,$scope.totalsheetApprovedCnt);
                    
                    if($scope.dayIdSet_ForCnt.indexOf($scope.rejectRec.Id) == -1) {
                        $scope.dayIdSet_ForCnt.push($scope.rejectRec.Id);
                        $scope.totalHrsCount = parseFloat($scope.totalHrsCount) + parseFloat($scope.rejectRec.Total_Hours_Before_Approved__c);
                    }
                    
                    console.log(':inside::::reject:::::::',$scope.totalHrsCount);
                    console.log(':::::::::contactIdCountMAp:::::reject:::::',$scope.contactIdCountMap[$scope.selectedRec.InstructorId]);
                    
                    
                    //Check for already Rejected hrs & Id sets
                    
                    if(alreadyRejectIds.indexOf($scope.selectedRec.Id) != -1) {
                        alreadyRejectedHrs = parseFloat(alreadyRejectedHrs) - parseFloat($scope.selectedRec.Total_Hours_Before_Approved__c);
                        var index = alreadyRejectIds.indexOf($scope.selectedRec.Id);
                        alreadyApprovedIds.splice(index,1);
                    }
                    
                    $scope.modalStateReject = '';
                    $scope.modalBackdropStateReject = '';
                }else {
                    if(!$scope.summaryComment)
                        $scope.summaryCmtError = 'slds-has-error';
                }
                
                //console.log(':::::reject::::::::',$scope.RejectedRecList,rejectHrsCount,approve_RejectrecIds);
            }
            
            // This is to Calculate approved hrs,rejcted hrs
            
            $scope.overAllapprovedHrs = 0;
            $scope.overAllrejectesHrs = 0;
            $scope.pendingHrs = 0;
            
            var UpdationRecapproveList = [];
            var UpdationRecrejectList = [];
            
            var PendingRecordsList = [];
            
            var alreadyApprovedIds = [];
            var alreadyRejectIds = [];
            var alreadyApprovedHrs = 0;
            var alreadyRejectedHrs = 0;
            
            var overAllHrs = 0;
            
            function overAllupdateDataFormation() {
            
                UpdationRecapproveList = [];
                UpdationRecrejectList = [];
                $scope.overAllapprovedHrs = 0;
                $scope.overAllrejectesHrs = 0;
                $scope.pendingHrs = 0;
                
                alreadyApprovedIds = [];
                alreadyRejectIds = [];
                alreadyApprovedHrs = 0;
                alreadyRejectedHrs = 0;
                
                console.log(':::::::$scope.selectedContactId:::::::',$scope.selectedContactId);
                console.log('$scope.conIdWithTimeEnteredCountMap::',$scope.conIdWithTimeEnteredCountMap);
                if($scope.selectedContactId && $scope.conIdWithTimeEnteredCountMap && $scope.conIdWithTimeEnteredCountMap[$scope.selectedContactId]){
                    var timeEntryWrap = $scope.conIdWithTimeEnteredCountMap[$scope.selectedContactId];
                    $scope.timeEnteredOnTime = timeEntryWrap .timeEnteredOnTime;
                    $scope.timeEnteredLate = timeEntryWrap .timeEnteredLate;
                    $scope.timeSubmittedOnTime = timeEntryWrap .timeSubmittedOnTime;
                    $scope.timeSubmittedLate = timeEntryWrap.timeSubmittedLate;
                }
                
                for(var i = 0;i < $scope.SummaryViewTable.length;i++) {
                    
                    if($scope.SummaryViewTable[i].InstructorId == $scope.selectedContactId) {
                    
                        if($scope.SummaryViewTable[i].Hours1) {
                            if($scope.SummaryViewTable[i].status1 == 'Submitted')
                                $scope.pendingHrs = parseFloat($scope.pendingHrs) + parseFloat($scope.SummaryViewTable[i].Hours1);
                            
                            if($scope.SummaryViewTable[i].status1 != 'Approved')
                                $scope.overAllapprovedHrs = parseFloat($scope.overAllapprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours1);
                            
                            if($scope.SummaryViewTable[i].status1 != 'Rejected')
                                $scope.overAllrejectesHrs = parseFloat($scope.overAllrejectesHrs) + parseFloat($scope.SummaryViewTable[i].Hours1);
                                
                        }
                        if($scope.SummaryViewTable[i].Hours2) { 
                            if($scope.SummaryViewTable[i].status2 == 'Submitted')
                                $scope.pendingHrs = parseFloat($scope.pendingHrs) + parseFloat($scope.SummaryViewTable[i].Hours2);
                            
                            if($scope.SummaryViewTable[i].status2 != 'Approved')
                                $scope.overAllapprovedHrs = parseFloat($scope.overAllapprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours2);
                            
                            if($scope.SummaryViewTable[i].status2 != 'Rejected')
                                $scope.overAllrejectesHrs = parseFloat($scope.overAllrejectesHrs) + parseFloat($scope.SummaryViewTable[i].Hours2);
                        }
                        if($scope.SummaryViewTable[i].Hours3) { 
                            if($scope.SummaryViewTable[i].status3 == 'Submitted')
                                $scope.pendingHrs = parseFloat($scope.pendingHrs) + parseFloat($scope.SummaryViewTable[i].Hours3);
                            
                            if($scope.SummaryViewTable[i].status3 != 'Approved')
                                $scope.overAllapprovedHrs = parseFloat($scope.overAllapprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours3);
                            
                            if($scope.SummaryViewTable[i].status3 != 'Rejected')
                                $scope.overAllrejectesHrs = parseFloat($scope.overAllrejectesHrs) + parseFloat($scope.SummaryViewTable[i].Hours3);
                        }
                        if($scope.SummaryViewTable[i].Hours4) { 
                            if($scope.SummaryViewTable[i].status4 == 'Submitted')
                                $scope.pendingHrs = parseFloat($scope.pendingHrs) + parseFloat($scope.SummaryViewTable[i].Hours4);
                            
                            if($scope.SummaryViewTable[i].status4 != 'Approved')
                                $scope.overAllapprovedHrs = parseFloat($scope.overAllapprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours4);
                            
                            if($scope.SummaryViewTable[i].status4 != 'Rejected')
                                $scope.overAllrejectesHrs = parseFloat($scope.overAllrejectesHrs) + parseFloat($scope.SummaryViewTable[i].Hours4);
                        }
                        if($scope.SummaryViewTable[i].Hours5) {
                            if($scope.SummaryViewTable[i].status5 == 'Submitted')
                                $scope.pendingHrs = parseFloat($scope.pendingHrs) + parseFloat($scope.SummaryViewTable[i].Hours5);
                            
                            if($scope.SummaryViewTable[i].status5 != 'Approved')
                                $scope.overAllapprovedHrs = parseFloat($scope.overAllapprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours5);
                            
                            if($scope.SummaryViewTable[i].status5 != 'Rejected')
                                $scope.overAllrejectesHrs = parseFloat($scope.overAllrejectesHrs) + parseFloat($scope.SummaryViewTable[i].Hours5);
                        }
                        if($scope.SummaryViewTable[i].Hours6) { 
                            if($scope.SummaryViewTable[i].status6 == 'Submitted')
                                $scope.pendingHrs = parseFloat($scope.pendingHrs) + parseFloat($scope.SummaryViewTable[i].Hours6);
                            
                            if($scope.SummaryViewTable[i].status5 != 'Approved')
                                $scope.overAllapprovedHrs = parseFloat($scope.overAllapprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours6);
                            
                            if($scope.SummaryViewTable[i].status6 != 'Rejected')
                                $scope.overAllrejectesHrs = parseFloat($scope.overAllrejectesHrs) + parseFloat($scope.SummaryViewTable[i].Hours6);
                        }
                        if($scope.SummaryViewTable[i].Hours7) { 
                            if($scope.SummaryViewTable[i].status7 == 'Submitted')
                                $scope.pendingHrs = parseFloat($scope.pendingHrs) + parseFloat($scope.SummaryViewTable[i].Hours7);
                            
                            if($scope.SummaryViewTable[i].status7 != 'Approved')
                                $scope.overAllapprovedHrs = parseFloat($scope.overAllapprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours7);
                            
                            if($scope.SummaryViewTable[i].status7 != 'Rejected')
                                $scope.overAllrejectesHrs = parseFloat($scope.overAllrejectesHrs) + parseFloat($scope.SummaryViewTable[i].Hours7);
                        }
                        
                        if($scope.SummaryViewTable[i].Hrs1Day1Id) {
                            if($scope.SummaryViewTable[i].status1 != 'Approved')
                                UpdationRecapproveList.push({Id:$scope.SummaryViewTable[i].Hrs1Day1Id,Status__c:'Approved',AcctSeed__Hours__c:$scope.SummaryViewTable[i].Hours1,Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status1 != 'Rejected')
                                UpdationRecrejectList.push({Id:$scope.SummaryViewTable[i].Hrs1Day1Id,Status__c:'Rejected',Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                                
                            if($scope.SummaryViewTable[i].status1 && $scope.SummaryViewTable[i].status1 == 'Approved') {
                                alreadyApprovedIds.push($scope.SummaryViewTable[i].Hrs1Day1Id);
                                alreadyApprovedHrs = parseFloat(alreadyApprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours1);
                                
                            } else if($scope.SummaryViewTable[i].status1 && $scope.SummaryViewTable[i].status1 == 'Rejected'){
                                alreadyRejectIds.push($scope.SummaryViewTable[i].Hrs1Day1Id);
                                alreadyRejectedHrs = parseFloat(alreadyRejectedHrs) + parseFloat($scope.SummaryViewTable[i].Hours1);
                            }
                        }
                        
                        if($scope.SummaryViewTable[i].Hrs2Day2Id) {
                            if($scope.SummaryViewTable[i].status2 != 'Approved')
                                UpdationRecapproveList.push({Id:$scope.SummaryViewTable[i].Hrs2Day2Id,Status__c:'Approved',AcctSeed__Hours__c:$scope.SummaryViewTable[i].Hours2,Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status2 != 'Rejected')
                                UpdationRecrejectList.push({Id:$scope.SummaryViewTable[i].Hrs2Day2Id,Status__c:'Rejected',Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status2 && $scope.SummaryViewTable[i].status2 == 'Approved') {
                                alreadyApprovedIds.push($scope.SummaryViewTable[i].Hrs2Day2Id);
                                alreadyApprovedHrs = parseFloat(alreadyApprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours2);
                                
                            } else if($scope.SummaryViewTable[i].status2 && $scope.SummaryViewTable[i].status2 == 'Rejected'){
                                alreadyRejectIds.push($scope.SummaryViewTable[i].Hrs2Day2Id);
                                alreadyRejectedHrs = parseFloat(alreadyRejectedHrs) + parseFloat($scope.SummaryViewTable[i].Hours2);
                            }
                        }
                        
                        if($scope.SummaryViewTable[i].Hrs3Day3Id) {
                            if($scope.SummaryViewTable[i].status3 != 'Approved')
                                UpdationRecapproveList.push({Id:$scope.SummaryViewTable[i].Hrs3Day3Id,Status__c:'Approved',AcctSeed__Hours__c:$scope.SummaryViewTable[i].Hours3,Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status3 != 'Rejected')
                                UpdationRecrejectList.push({Id:$scope.SummaryViewTable[i].Hrs3Day3Id,Status__c:'Rejected',Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status3 && $scope.SummaryViewTable[i].status3 == 'Approved') {
                                alreadyApprovedIds.push($scope.SummaryViewTable[i].Hrs3Day3Id);
                                alreadyApprovedHrs = parseFloat(alreadyApprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours3);
                                
                            } else if($scope.SummaryViewTable[i].status3 && $scope.SummaryViewTable[i].status3 == 'Rejected'){
                                alreadyRejectIds.push($scope.SummaryViewTable[i].Hrs3Day3Id);
                                alreadyRejectedHrs = parseFloat(alreadyRejectedHrs) + parseFloat($scope.SummaryViewTable[i].Hours3);
                            }
                        }
                        
                        if($scope.SummaryViewTable[i].Hrs4Day4Id) {
                            if($scope.SummaryViewTable[i].status4 != 'Approved')
                                UpdationRecapproveList.push({Id:$scope.SummaryViewTable[i].Hrs4Day4Id,Status__c:'Approved',AcctSeed__Hours__c:$scope.SummaryViewTable[i].Hours4,Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status4 != 'Rejected')
                                UpdationRecrejectList.push({Id:$scope.SummaryViewTable[i].Hrs4Day4Id,Status__c:'Rejected',Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status4 && $scope.SummaryViewTable[i].status4 == 'Approved') {
                                alreadyApprovedIds.push($scope.SummaryViewTable[i].Hrs4Day4Id);
                                alreadyApprovedHrs = parseFloat(alreadyApprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours4);
                                
                            } else if($scope.SummaryViewTable[i].status4 && $scope.SummaryViewTable[i].status4 == 'Rejected'){
                                alreadyRejectIds.push($scope.SummaryViewTable[i].Hrs4Day4Id);
                                alreadyRejectedHrs = parseFloat(alreadyRejectedHrs) + parseFloat($scope.SummaryViewTable[i].Hours4);
                            }
                        }
                        
                        if($scope.SummaryViewTable[i].Hrs5Day5Id) {
                            if($scope.SummaryViewTable[i].status5 != 'Approved')
                                UpdationRecapproveList.push({Id:$scope.SummaryViewTable[i].Hrs5Day5Id,Status__c:'Approved',AcctSeed__Hours__c:$scope.SummaryViewTable[i].Hours5,Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status5 != 'Rejected')
                                UpdationRecrejectList.push({Id:$scope.SummaryViewTable[i].Hrs5Day5Id,Status__c:'Rejected',Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status5 && $scope.SummaryViewTable[i].status5 == 'Approved') {
                                alreadyApprovedIds.push($scope.SummaryViewTable[i].Hrs5Day5Id);
                                alreadyApprovedHrs = parseFloat(alreadyApprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours5);
                                
                            } else if($scope.SummaryViewTable[i].status5 && $scope.SummaryViewTable[i].status5 == 'Rejected'){
                                alreadyRejectIds.push($scope.SummaryViewTable[i].Hrs5Day5Id);
                                alreadyRejectedHrs = parseFloat(alreadyRejectedHrs) + parseFloat($scope.SummaryViewTable[i].Hours5);
                            }
                        }
                        
                        if($scope.SummaryViewTable[i].Hrs6Day6Id) {
                            if($scope.SummaryViewTable[i].status6 != 'Approved')
                                UpdationRecapproveList.push({Id:$scope.SummaryViewTable[i].Hrs6Day6Id,Status__c:'Approved',AcctSeed__Hours__c:$scope.SummaryViewTable[i].Hours6,Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status6 != 'Rejected')
                                UpdationRecrejectList.push({Id:$scope.SummaryViewTable[i].Hrs6Day6Id,Status__c:'Rejected',Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status6 && $scope.SummaryViewTable[i].status6 == 'Approved') {
                                alreadyApprovedIds.push($scope.SummaryViewTable[i].Hrs6Day6Id);
                                alreadyApprovedHrs = parseFloat(alreadyApprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours6);
                                
                            } else if($scope.SummaryViewTable[i].status6 && $scope.SummaryViewTable[i].status6 == 'Rejected'){
                                alreadyRejectIds.push($scope.SummaryViewTable[i].Hrs6Day6Id);
                                alreadyRejectedHrs = parseFloat(alreadyRejectedHrs) + parseFloat($scope.SummaryViewTable[i].Hours6);
                            }
                        }
                        
                        if($scope.SummaryViewTable[i].Hrs7Day7Id) {
                            if($scope.SummaryViewTable[i].status7 != 'Approved')
                                UpdationRecapproveList.push({Id:$scope.SummaryViewTable[i].Hrs7Day7Id,Status__c:'Approved',AcctSeed__Hours__c:$scope.SummaryViewTable[i].Hours7,Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                            
                            if($scope.SummaryViewTable[i].status7 != 'Rejected')
                                UpdationRecrejectList.push({Id:$scope.SummaryViewTable[i].Hrs7Day7Id,Status__c:'Rejected',Approved_Date__c:currentDate,Approved_by__c:$scope.userId});
                        
                            if($scope.SummaryViewTable[i].status7 && $scope.SummaryViewTable[i].status7 == 'Approved') {
                                alreadyApprovedIds.push($scope.SummaryViewTable[i].Hrs7Day7Id);
                                alreadyApprovedHrs = parseFloat(alreadyApprovedHrs) + parseFloat($scope.SummaryViewTable[i].Hours7);
                                
                            } else if($scope.SummaryViewTable[i].status7 && $scope.SummaryViewTable[i].status7 == 'Rejected'){
                                alreadyRejectIds.push($scope.SummaryViewTable[i].Hrs7Day7Id);
                                alreadyRejectedHrs = parseFloat(alreadyRejectedHrs) + parseFloat($scope.SummaryViewTable[i].Hours7);
                            }
                        }
                    }
                }
                
                if($scope.overAllapprovedHrs)
                    $scope.overAllapprovedHrs = $scope.overAllapprovedHrs.toFixed(2);
                
                if($scope.overAllrejectesHrs)  
                    $scope.overAllrejectesHrs = $scope.overAllrejectesHrs.toFixed(2);
                
                overAllHrs = (parseFloat($scope.pendingHrs) + parseFloat(alreadyApprovedHrs) + parseFloat(alreadyRejectedHrs)).toFixed(2);
                
                console.log('::::appr::::rej::Ids::',alreadyApprovedIds,alreadyRejectIds);
                console.log('::::appr::::rej::hrs::',alreadyApprovedHrs,alreadyRejectedHrs);
                //console.log(':::::::appr:reject:::hrs:::::',$scope.overAllapprovedHrs,$scope.overAllrejectesHrs);
            }
                      
            
            // This function for approve all action
            $scope.approveAllFunction = function() {
                
                $scope.actionType = 'Approve';
                $scope.ShowReasonBox = false;
                
                $scope.titleApprove_Reject = 'Approval Confirmation';
                
                if($scope.selectedDAUser != '--None--')
                    $scope.DAApproverMsg = 'You are approving timesheet on behalf of <b>'+$scope.selectedUsrName+'</b>.';
                
                $scope.hrsDetailsInfo = 'The total hours that will be approved is: '+$scope.overAllapprovedHrs+', and any previous changes made to the page will be overridden, would you like to proceed?';
                //$scope.Approve_RejectContent = 'Would you like to override manual changes?';
                
                //console.log('::::::UpdationRecapproveList::approve:::',UpdationRecapproveList,$scope.overAllapprovedHrs);
                
                $scope.modalStateAll = 'slds-fade-in-open';
                $scope.modalBackdropStateAll = 'slds-modal-backdrop--open';
            }
            
            // This function for reject all action
            
            $scope.rejectAllFunction = function() {
                $scope.actionType = 'Reject';
                $scope.ShowReasonBox = true;
                
                $scope.titleApprove_Reject = 'Rejection Confirmation';
                
                if($scope.selectedDAUser != '--None--')
                    $scope.DAApproverMsg = 'You are rejecting timesheet on behalf of <b>'+$scope.selectedUsrName+'</b>.';
                
                $scope.hrsDetailsInfo = 'The total hours that will be rejected is: '+$scope.overAllrejectesHrs+', and any previous changes made to the page will be overridden, would you like to proceed?';
                //$scope.Approve_RejectContent = 'Would you like to override manual changes?';
                
                //console.log('::::::UpdationRecapproveList::reject:::',UpdationRecapproveList,$scope.overAllrejectesHrs);
                
                $scope.modalStateAll = 'slds-fade-in-open';
                $scope.modalBackdropStateAll = 'slds-modal-backdrop--open';
            }
            
            // This for Advanced Approve / Reject action model open
            
            $scope.advancedAppRejFunction = function() {
                
                PendingRecordsList = [];
                
                //$scope.approvalHrsCount = 0;
                //$scope.rejectedHrsCount = 0;
                
                $scope.approvalHrsCount = approveHrsCnt;
                $scope.rejectedHrsCount = rejectHrsCount;
                
                // For overall pending hrs calculation
                $scope.overAllpendingHrs = (parseFloat($scope.pendingHrs) - (parseFloat($scope.approvalHrsCount) + parseFloat($scope.rejectedHrsCount))).toFixed(2);
                
                if($scope.overAllpendingHrs.indexOf('-') != -1)
                    $scope.overAllpendingHrs = 0;
                    
                // To get the pending records list from modified records
                
                for(var key in $scope.dayDetailforSummaryMap) {
                    if(approve_RejectrecIds.indexOf(key) == -1) {
                        PendingRecordsList.push($scope.dayDetailforSummaryMap[key]);
                    }
                }
                //console.log('::::::::PendingRecordsList::::::',PendingRecordsList);
                
                $scope.modalStateAdvanced = 'slds-fade-in-open';
                $scope.modalBackdropStateAdvanced = 'slds-modal-backdrop--open';
            }
            
            // This function for Approve All / Reject All  operation
            
            $scope.yesClickForApprove_Reject = function() {
                //console.log('::::::$scope.overAllrejectComment:::::',$scope.overAllrejectComment);
                
                if($scope.actionType == 'Approve') {
                
                    $scope.modalStateAll = '';
                    $scope.modalBackdropStateAll = '';
                    
                    var EmailSendType = 'ApproveAll';
                    
                    //console.log('::::UpdationRecapproveList:::approve::::::::',UpdationRecapproveList);
                    
                    // Call updation function
                    dayRecordupdationCall(UpdationRecapproveList,'Approve','ApproveAll',EmailSendType);
                }else {
                    
                    if($scope.overAllrejectComment) {
                        
                        $scope.modalStateAll = '';
                        $scope.modalBackdropStateAll = '';
                        
                        var EmailSendType = 'RejectAll';
                        
                        // Update the rejection comment in rejection list
                        for(var i = 0;i < UpdationRecrejectList.length;i++) {
                            UpdationRecrejectList[i].AcctSeed__Invoice_Comment__c = $scope.overAllrejectComment;
                        }
                        
                        //console.log('::::UpdationRecrejectList:::reject::::::::',UpdationRecrejectList);
                        
                        // call updation function
                        dayRecordupdationCall(UpdationRecrejectList,'Reject','RejectAll',EmailSendType);
                    }else {
                        if(!$scope.overAllrejectComment)
                           $scope.overAllrejectError = 'slds-has-error';
                    }
                }
            }
            
            // This function for save changes only option
            
            $scope.saveChangesonlyFunction = function() {
                if($scope.selectedDAUser == '--None--' && ($scope.approvedRecList.length > 0 || $scope.RejectedRecList.length > 0)){
                    savechangesOnlyDmlCall();
                }else if($scope.approvedRecList.length > 0 || $scope.RejectedRecList.length > 0){
                    
                    $scope.modalStateDAchangesOnly = 'slds-fade-in-open';
                    $scope.modalBackdropStateDAchangesOnly = 'slds-modal-backdrop--open';
                }else {
                    $scope.errorOccured = true;
                    $scope.MessgeTitle = 'Info';
                    $scope.MessageContent = 'Please approve/reject any one of the record to save.';
                    $scope.modalStateVariable = "slds-fade-in-open";
                    $scope.modalBackdrop = "slds-backdrop--open";
                }
            }
            
            // yes click on save changes only Approve as type action
            $scope.approveAsYesClick = function(){
                $scope.modalStateDAchangesOnly = '';
                $scope.modalBackdropStateDAchangesOnly = '';
                savechangesOnlyDmlCall();
            }
            
            function savechangesOnlyDmlCall() {
                var dayRecUpdation = [];
                var EmailSendType = '';
                
                dayRecUpdation = $scope.approvedRecList;
                dayRecUpdation = dayRecUpdation.concat($scope.RejectedRecList);
                
                console.log('::::::$scope.pendingHrs::::',$scope.pendingHrs);
                console.log('::::::approveHrsCnt::::',approveHrsCnt);
                console.log('::::::rejectHrsCount::::',rejectHrsCount);
                
                if(overAllHrs == (approveHrsCnt + alreadyApprovedHrs)) {
                    EmailSendType = 'ApproveAll';
                }else if(overAllHrs == (rejectHrsCount + alreadyRejectedHrs)) {
                    EmailSendType = 'RejectAll';
                }else if($scope.overAllpendingHrs == 0) {
                    EmailSendType = 'Partial';
                }
                
                console.log('::::EmailSendType:::',EmailSendType);
                //console.log('::::::dayRecUpdation::::::',dayRecUpdation);
                
                dayRecordupdationCall(dayRecUpdation,'changes only','',EmailSendType);
            }
            
            // This function for Save changes & Approve Pending records
            $scope.savechanges_ApprovePending = function() {
                
                var dayRecUpdation = [];
                var EmailSendType = '';
                
                dayRecUpdation = $scope.approvedRecList;
                dayRecUpdation = dayRecUpdation.concat($scope.RejectedRecList);
                
                // To update Status as Approved for Pending records
                for(var i = 0;i < PendingRecordsList.length;i++) {
                    dayRecUpdation.push(
                        {
                        Id:PendingRecordsList[i].Id,
                        Status__c:'Approved',
                        AcctSeed__Hours__c:PendingRecordsList[i].Total_Hours_Before_Approved__c,
                        Approved_Date__c:currentDate,
                        Approved_by__c:$scope.userId
                        });
                }
                //console.log('::::::dayRecUpdation::::::',dayRecUpdation);
                
                console.log('::::::$scope.overAllpendingHrs:::',$scope.overAllpendingHrs);
                console.log('::::::$scope.approvalHrsCount:::',$scope.approvalHrsCount);
                console.log('::::::$scope.overAllapprovedHrs:::',$scope.overAllapprovedHrs);
                console.log('::::::alreadyApprovedHrs:::',alreadyApprovedHrs);
                
                if($scope.overAllapprovedHrs == parseFloat($scope.overAllpendingHrs) + parseFloat($scope.approvalHrsCount) + parseFloat(alreadyApprovedHrs)) {
                    EmailSendType = 'ApproveAll';    
                }else {
                    EmailSendType = 'Partial';
                }
                
                console.log(':::::EmailSendType:::::',EmailSendType);
                
                dayRecordupdationCall(dayRecUpdation,'Approve','',EmailSendType);
            }
            
            // This function for Save changes & Reject Pending Records
            $scope.savechanges_RejectPending = function() {
                
                $scope.pendingComment = '';
                
                $scope.modalStatePendingReject = 'slds-fade-in-open';
                $scope.modalBackdropStatePendingReject = 'slds-modal-backdrop--open';
                
                $scope.modalStateAdvanced = '';
                $scope.modalBackdropStateAdvanced = '';
            }
            
            // This function to get rejection reason for Save changes and Reject pending hrs
            
            $scope.PendingHrsRejectReasonEntered = function() {
                
                if($scope.pendingComment) {
                    
                    $scope.modalStatePendingReject = '';
                    $scope.modalBackdropStatePendingReject = '';
                
                    var dayRecUpdation = [];
                    var EmailSendType = '';
                
                    dayRecUpdation = $scope.approvedRecList;
                    dayRecUpdation = dayRecUpdation.concat($scope.RejectedRecList);
                    
                    // To update Status as Approved for Pending records
                    for(var i = 0;i < PendingRecordsList.length;i++) {
                        dayRecUpdation.push(
                            {
                                Id: PendingRecordsList[i].Id,
                                Status__c: 'Rejected',
                                AcctSeed__Invoice_Comment__c: $scope.pendingComment,
                                Approved_Date__c: currentDate,
                                Approved_by__c: $scope.userId
                            });
                    }
                    //console.log('::::::dayRecUpdation::::::',dayRecUpdation);
                    
                    console.log('::::::$scope.overAllpendingHrs:::',$scope.overAllpendingHrs);
                    console.log('::::::$scope.rejectedHrsCount:::',$scope.rejectedHrsCount);
                    console.log('::::::$scope.overAllrejectesHrs:::',$scope.overAllrejectesHrs);
                    console.log('::::::alreadyRejectedHrs:::',alreadyRejectedHrs);
                    
                    if($scope.overAllrejectesHrs == parseFloat($scope.overAllpendingHrs) + parseFloat($scope.rejectedHrsCount) + parseFloat(alreadyRejectedHrs)) {
                        EmailSendType = 'RejectAll';    
                    }else {
                        EmailSendType = 'Partial';
                    }
                    
                    console.log(':::::EmailSendType:::::',EmailSendType);
                    
                    dayRecordupdationCall(dayRecUpdation,'Reject','',EmailSendType);
                }else {
                    if(!$scope.pendingComment)
                        $scope.pendingCmtError = 'slds-has-error';
                }
            }
            
            function dayRecordupdationCall(updationList,Fromtype,MassActionType,EmailType) {
                console.log('::::::::updationList:::::updatefunction::',updationList);
                
                $scope.modalStateAdvanced = '';
                $scope.modalBackdropStateAdvanced = '';
                
                document.getElementById("spinner").style.display = 'block';
                
                if(updationList.length > 0) {
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.supervisorTimeApproval_Ctrl.updateTimecardDayrecords}',
                        JSON.stringify(updationList),MassActionType,EmailType,
                        function(result, ev) {
                            if(ev.status) {
                                $timeout(function() {
                                    document.getElementById("spinner").style.display = 'none';
                                    
                                    $scope.errorOccured = false;
                                    $scope.MessgeTitle = 'Success';
                                    if(Fromtype == 'Approve') {
                                        $scope.MessageContent = 'The time entries'+' approval status have been updated successfully.';
                                    }else if(Fromtype == 'Reject') {
                                        $scope.MessageContent = 'The time entries'+' approval status have been updated successfully.';
                                    }else if(Fromtype == 'changes only') {
                                        $scope.MessageContent = 'The time entries'+' approval status have been updated successfully.';
                                    }
                                    $scope.modalStateVariable = "slds-fade-in-open";
                                    $scope.modalBackdrop = "slds-backdrop--open";
                                });
                                
                            } else {
                                console.log('::::ev::::',ev);
                                document.getElementById("spinner").style.display = 'none';
                                $scope.errorOccured = true;
                                $scope.MessgeTitle = 'Error';
                                $scope.MessageContent = ev.message;
                                $scope.modalStateVariable = "slds-fade-in-open";
                                $scope.modalBackdrop = "slds-backdrop--open";
                                $scope.$apply();
                            }
                        },
                        {escape: true}
                    );
                }else {
                    document.getElementById("spinner").style.display = 'none';
                }
            }
            
            // Get Confirmation from user for every filter change
            $scope.displayConfirmationWindow = function(typeOfChange) {
                
                $scope.urlValues = {};
                
                $scope.typeofCall = typeOfChange;
                
                if($scope.approvedRecList.length > 0 || $scope.RejectedRecList.length > 0) {
                    $scope.modalStateForFilterChange = 'slds-fade-in-open';
                    $scope.modalBackdropStateForFilterChange = 'slds-modal-backdrop--open';
                }else {
                    if($scope.typeofCall == 'FromUserType') {
                        $scope.UserTypeFilter();
                        overAllupdateDataFormation();
                    } else if($scope.typeofCall == 'Filter') {
                        $scope.Filter();
                        overAllupdateDataFormation();
                    } else if($scope.typeofCall == 'detailViewChange') {
                        $scope.detailViewFunction();
                        overAllupdateDataFormation();
                        FormNotesSection();
                    } else if($scope.typeofCall == 'WeekRangeFlip') {
                        $scope.getSummarydetails_ForWeekRange();
                    }else if($scope.typeofCall == 'Approver Selection'){
                        
                        $scope.selectedUsrName = '';
                        var userRec = _.filter($scope.UsersRelatedtoDA, function(data){ 
                            if(data.Id == $scope.selectedDAUser)
                                return data; 
                        });
                        
                        if(userRec.length > 0)
                            $scope.selectedUsrName = userRec[0].Name; 
                        
                        $scope.UserTypeFilter();
                        overAllupdateDataFormation();
                    }
                }
            }
            
            $scope.OkayFunction = function() {
                $scope.saveChangesonlyFunction();
                $timeout(function(){
                    $scope.modalStateForFilterChange = '';
                    $scope.modalBackdropStateForFilterChange = '';
                    
                    console.log('::$scope.typeofCall::::',$scope.typeofCall);
                    
                    if($scope.typeofCall == 'FromUserType') {
                        $scope.UserTypeFilter();
                        overAllupdateDataFormation();
                    } else if($scope.typeofCall == 'Filter') {
                        $scope.Filter();
                        overAllupdateDataFormation();
                    } else if($scope.typeofCall == 'detailViewChange') {
                        $scope.detailViewFunction();
                        overAllupdateDataFormation();
                    } else if($scope.typeofCall == 'WeekRangeFlip') {
                        $scope.getSummarydetails_ForWeekRange();
                    }else if($scope.typeofCall == 'Approver Selection'){
                        $scope.UserTypeFilter();
                        overAllupdateDataFormation();
                    }
                    
                },1000);
            }
            
            $scope.cancelForConfirmation = function() {
                $scope.modalStateForFilterChange = '';
                $scope.modalBackdropStateForFilterChange = '';
                
                /*console.log(':::::flipOption::::',flipOption);
                console.log(':::::ProjectRT::::',ProjectRT);
                console.log(':::::SVP::::',SVP);
                console.log(':::::SV::::',SV);
                console.log(':::::SPV::::',SPV);
                console.log(':::::SWR::::',SWR);
                
                console.log(':::::$scope.selectedUserType::::',$scope.selectedUserType);
                console.log(':::::$scope.multiSelectObj.selectedProjectRT::::',$scope.multiSelectObj.selectedProjectRT);
                console.log(':::::$scope.selectedContactId::::',$scope.selectedContactId);
                console.log(':::::$scope.selectedWeekrange::::',$scope.selectedWeekrange);*/
                
                //$scope.selectedUserType = flipOption;
                //$scope.multiSelectObj.selectedProjectRT = ProjectRT;
                $scope.selectedContactId = SPV;
                $scope.selectedWeekrange = SWR;
                
                /*console.log('::adda:::$scope.selectedUserType::::',$scope.selectedUserType);
                console.log(':adad::::$scope.multiSelectObj.selectedProjectRT::::',$scope.multiSelectObj.selectedProjectRT);
                console.log('::adad:::$scope.selectedContactId::::',$scope.selectedContactId);
                console.log('::adda:::$scope.selectedWeekrange::::',$scope.selectedWeekrange);*/
            }
            
            $scope.proceedwithoutsave = function() {
                $scope.modalStateForFilterChange = '';
                $scope.modalBackdropStateForFilterChange = '';
                
                $timeout(function(){
                
                    $scope.approvedRecList = [];
                    $scope.RejectedRecList = [];
                    var approve_RejectrecIds = [];
                    
                    $scope.approvalHrsCount = 0;
                    $scope.rejectedHrsCount = 0;
                    $scope.overAllpendingHrs = 0;
                    
                    approveHrsCnt = 0;
                    rejectHrsCount = 0;
                    
                    approve = [];
                    reject = [];
                    
                    console.log('::$scope.typeofCall::::',$scope.typeofCall);
                
                    if($scope.typeofCall == 'FromUserType') {
                        $scope.UserTypeFilter();
                        overAllupdateDataFormation();
                    } else if($scope.typeofCall == 'Filter') {
                        $scope.Filter();
                        overAllupdateDataFormation();
                    } else if($scope.typeofCall == 'detailViewChange') {
                        $scope.detailViewFunction();
                        overAllupdateDataFormation();
                    } else if($scope.typeofCall == 'WeekRangeFlip') {
                        $scope.getSummarydetails_ForWeekRange();
                    } else if($scope.typeofCall == 'Approver Selection'){
                        $scope.UserTypeFilter();
                        overAllupdateDataFormation();
                    }
                        
                },1000);
                
            }
            
            // Added for Summary tab data formation - By Sukanya on August 18 2017
            
            function SummaryWeekRangeFilterFormation() {
       
                // These below code to populate date for today based infor
                
                $scope.MonthDaysList = [];
                $scope.summaryWeekrangeFilter = [];
            
                $scope.MonthFromDate = new moment();
                
                var actulaMnthStartDate = new moment(moment().subtract(1,'months').endOf('month').add(1, 'days'));
                var actulaMnthEndDate = new moment().add(1, 'months').date(1).subtract(1, 'days');
                
                var monthFrom;
                var monthtTo;
                
                if(moment($scope.MonthFromDate).isAfter(new moment(actulaMnthStartDate).add(15,'days'))) {
                   
                   monthFrom = new moment(actulaMnthStartDate).add(15,'days');
                   monthtTo = actulaMnthEndDate;
                }else {
                   monthFrom = actulaMnthStartDate;
                   monthtTo = new moment(actulaMnthStartDate).add(14,'days');
                }
                
                $scope.MonthFromDate = new moment(monthFrom).format('MM-DD-YYYY');
                $scope.MonthToDate = new moment(monthtTo).format('MM-DD-YYYY');
                
                var monthStart = moment($scope.MonthFromDate);
                var monthEnd = moment($scope.MonthToDate);
                
                while(monthStart.isBefore(monthEnd) || monthStart.isSame(monthEnd)) {
                   $scope.MonthDaysList.push(monthStart.format('YYYY-MM-DD'));
                   monthStart.add(1, 'days').format('YYYY-MM-DD');
                }
              
               
               var pastMonthSt = moment().subtract(4,'months').endOf('month').add(1, 'days').format('YYYY-MM-DD');
               var futureMontend = moment().add(2, 'months').date(1).subtract(1, 'days').format('YYYY-MM-DD');
                   
               var monthRangeFilter = [];
               
               var week1 = moment(pastMonthSt, 'YYYY-MM-DD');
               var week2 = moment(futureMontend, 'YYYY-MM-DD');
              
               while(week1.isBefore(week2) || week1.isSame(week2)) {
                   var dt1 = angular.copy(week1);
                   var dt2 = moment(dt1).add(14,'days');
                   
                   var dt3 = moment(dt2).add(1,'days');
                   var dt4 = moment(dt3).add(1, 'months').date(1).subtract(1, 'days');
                   
                  $scope.summaryWeekrangeFilter.push(dt1.format('MM-DD-YYYY')+' to '+dt2.format('MM-DD-YYYY'));
                  $scope.summaryWeekrangeFilter.push(dt3.format('MM-DD-YYYY')+' to '+dt4.format('MM-DD-YYYY'));
                  
                  week1.add(1,'month').format('MM-DD-YYYY');
               }
               
               $scope.SemiMonthlyView.summaryWeekRange = moment(monthFrom).format('MM-DD-YYYY')+' to '+moment(monthtTo).format('MM-DD-YYYY');
                
            }
            
            function getSemiMonthlyViewData(startDate,EndDate) {
                //console.log('::::startDate::::::::EndDate::::::::::::::',startDate,EndDate);
                
                document.getElementById("spinner").style.display = 'block';
                 Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.supervisorTimeApproval_Ctrl.getSemiMonthly_TimeRecords}',
                    startDate,EndDate,$scope.SemiMonthlyView.UserType,
                    function(records, ev) {
                        if(ev.status) {
                            console.log(':::::result::summary:::',records);
                            $timeout(function() {
                                
                                $scope.SummaryDataList = [];
                                summary_AllDataArray = [];
                                summary_AllDataArray1 = [];
                                var weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                                
                                $scope.showDetaildata = records.summaryList;
                                summary_AllDataArray1 = records.summaryList;
                                
                                summary_AllDataArray = records.dateSummaryDetailMap;
                                
                                $scope.summaryContactFilter = records.contactIdNameMap;
                                
                                if(Object.keys($scope.summaryContactFilter).length > 0)
                                    $scope.SemiMonthlyView.SelectedContact = Object.keys($scope.summaryContactFilter)[0];
                                    
                                for(var key in summary_AllDataArray) {
                                    var Hrssum = 0;
                                    var amountSum = 0;
                                    
                                    if(summary_AllDataArray.hasOwnProperty(key)) {
                                        for(var i = 0;i < summary_AllDataArray[key].length;i++) {
                                            Hrssum += summary_AllDataArray[key][i].Hours;
                                            
                                            if(summary_AllDataArray[key][i].TotalAmount)
                                                amountSum += summary_AllDataArray[key][i].TotalAmount;
                                        }
                                    }
                                    
                                    //var dateKey = new Date(parseInt(key)).setTime(new Date(parseInt(key)).getTime() + (new Date(parseInt(key)).getTimezoneOffset() * 1000 * 60));
                                    var dateKey = moment(key).format('MM-DD-YYYY');
                                    var dayKey = weekDays[moment(key).day()];
                                    $scope.SummaryDataList.push({dateValue:dateKey,dayValue:dayKey,Hours:Hrssum,TotalAmount:amountSum});
                                }
                                
                                $scope.SummaryStatusFilter = ['Draft/Submitted/Approved/Recalled/Reverted','Draft','Submitted','Approved','Rejected','Recalled','Reverted'];
                                $scope.SemiMonthlyView.SelectedStatus = 'Draft/Submitted/Approved/Recalled/Reverted';
                                
                                $scope.FilterSummaryData();
                                
                                document.getElementById("spinner").style.display = 'none';
                                
                            },0);
                        } else {
                            console.log('::::ev::::',ev);
                        }
                    },
                    {escape: true}
                ); 
            }
            
            $scope.summaryToDateCalc = function() {
        
               //document.getElementById("spinner").style.display = 'block';
                
               $scope.MonthDaysList = [];
                
               console.log('::::::::$scope.summaryWeekRange::::::',$scope.summaryWeekRange);
               
               var monthDt1 = moment($scope.SemiMonthlyView.summaryWeekRange.split(' to ')[0],'MM-DD-YYYY').format('YYYY-MM-DD');
               var monthDt2 = moment($scope.SemiMonthlyView.summaryWeekRange.split(' to ')[1],'MM-DD-YYYY').format('YYYY-MM-DD');
               
               var monthStart = moment(monthDt1);
               var monthEnd = moment(monthDt2);
                
               while(monthStart.isBefore(monthEnd) || monthStart.isSame(monthEnd)) {
                  $scope.MonthDaysList.push(monthStart.format('YYYY-MM-DD'));
                  monthStart.add(1, 'days').format('YYYY-MM-DD');
               }
               getSemiMonthlyViewData(monthDt1,monthDt2);
            }
            
            // get hours summary data
            $scope.hoursSummaryfunction = function(type) {
                var sumHrs = 0;
                
                if(type == 'showDetail') {
                    if($scope.showDetaildata) {
                        for(var i = 0;i < $scope.showDetaildata.length;i++) {
                            $scope.showDetaildata[i].dateValue = millisecondToString($scope.showDetaildata[i].dateValue);
                            sumHrs += $scope.showDetaildata[i].Hours;
                        }
                        return sumHrs;
                    }
                }else if(type == 'Summary') {
                    if($scope.SummaryDataList) {
                        for(var i = 0;i < $scope.SummaryDataList.length;i++) {
                            sumHrs += $scope.SummaryDataList[i].Hours;
                        }
                        return sumHrs;
                    }
                }
            }
            
            // get Amountsummary data
             
            $scope.amountSummaryfunction = function(type) {
                var sumAmount = 0;
                
                if(type == 'showDetail') {
                
                    if($scope.showDetaildata) {
                        for(var i = 0;i < $scope.showDetaildata.length;i++) {
                            sumAmount += $scope.showDetaildata[i].TotalAmount;
                        }
                        return sumAmount;
                    }
                }else if(type == 'Summary') {
                    if($scope.SummaryDataList) {
                        for(var i = 0;i < $scope.SummaryDataList.length;i++) {
                            sumAmount += $scope.SummaryDataList[i].TotalAmount;
                        }
                        return sumAmount;
                    }
                }
            }
            
            var i = 0;
            $scope.TableFlipfunction = function() {
                if(i == 0) {
                    $scope.tableViewDisplay = true;
                    i = 1;
                }else {
                    $scope.tableViewDisplay = false;
                    i = 0;
                }
            }
            
            $scope.MonthlyUserChange = function() {
                
                var monthDt1 = moment($scope.SemiMonthlyView.summaryWeekRange.split(' to ')[0],'MM-DD-YYYY').format('YYYY-MM-DD');
                var monthDt2 = moment($scope.SemiMonthlyView.summaryWeekRange.split(' to ')[1],'MM-DD-YYYY').format('YYYY-MM-DD');
                
                //console.log(':::::monthDt1,monthDt2:::::::',$scope.summaryWeekRange);
                
                getSemiMonthlyViewData(monthDt1,monthDt2);
                
            }
            
            $scope.stdHrsCalculation = function() {
                
                var dates = $scope.SemiMonthlyView.summaryWeekRange.split(' to ');
                 
                var day1 = moment(dates[0]);
                var day2 = moment(dates[1]);
                var adjust = 0;
      
                if((day1.dayOfYear() === day2.dayOfYear()) && (day1.year() === day2.year())){
                    return 0;
                }
                
                //Check if second date is before first date to switch
                if(day2.isBefore(day1)){
                    day2 = moment(dates[0]);
                    day1 = moment(dates[1]);
                }
                
                //Check if first date starts on weekends
                if(day1.day() === 6) { //Saturday
                    //Move date to next week monday
                    day1.day(8);
                } else if(day1.day() === 0) { //Sunday
                    //Move date to current week monday
                    day1.day(1);
                }
                
                //Check if second date starts on weekends
                if(day2.day() === 6) { //Saturday
                    //Move date to current week friday
                    day2.day(5);
                } else if(day2.day() === 0) { //Sunday
                    //Move date to previous week friday
                    day2.day(-2);
                }
                
                var day1Week = day1.isoWeek();
                var day2Week = day2.isoWeek();
                
                //Check if two dates are in different week of the year
                if(day1Week !== day2Week){
                    //Check if second date's year is different from first date's year
                    if (day2Week < day1Week){
                        day2Week += day1Week;
                    }
                    //Calculate adjust value to be substracted from difference between two dates
                    adjust = -2 * (day2Week - day1Week);
                }
                
                return (day2.diff(day1, 'days') + adjust + 1)*8;
            }
            
            $scope.FilterSummaryData = function() {
                
                $scope.SummaryDataList = [];
                $scope.showDetaildata = [];
                var weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                
                console.log('::::::$scope.SemiMonthlyView.SelectedStatus :::::::::::',$scope.SemiMonthlyView.SelectedStatus,$scope.SemiMonthlyView.SelectedContact);
                
                // Changed group by table view based on status values
                
                for(var key in summary_AllDataArray) {
                    
                    var Hrssum = 0;
                    var amountSum = 0;
                    
                    if(summary_AllDataArray.hasOwnProperty(key)) {
                        for(var i = 0;i < summary_AllDataArray[key].length;i++) {
                            
                            if($scope.SemiMonthlyView.SelectedStatus != 'Draft/Submitted/Approved/Recalled/Reverted') {
                        
                                if(summary_AllDataArray[key][i].Status == $scope.SemiMonthlyView.SelectedStatus
                                    && summary_AllDataArray[key][i].contactId == $scope.SemiMonthlyView.SelectedContact) {
                                    
                                    Hrssum += summary_AllDataArray[key][i].Hours;
                                    
                                    if(summary_AllDataArray[key][i].TotalAmount)
                                        amountSum += summary_AllDataArray[key][i].TotalAmount;
                                }else {
                                    Hrssum += 0;
                                    amountSum += 0;
                                }
                            
                            }else {
                                if(summary_AllDataArray[key][i].Status != 'Rejected' && summary_AllDataArray[key][i].contactId == $scope.SemiMonthlyView.SelectedContact) {
                                    
                                    Hrssum += summary_AllDataArray[key][i].Hours;
                                    
                                    if(summary_AllDataArray[key][i].TotalAmount)
                                        amountSum += summary_AllDataArray[key][i].TotalAmount;
                                    
                                }else {
                                    Hrssum += 0;
                                    amountSum += 0;
                                }
                            }
                        }
                    }
                    
                    //var dateKey = new Date(parseInt(key)).setTime(new Date(parseInt(key)).getTime() + (new Date(parseInt(key)).getTimezoneOffset() * 1000 * 60));
                    var dateKey = moment(key).format('MM-DD-YYYY');
                    var dayKey = weekDays[moment(key).day()];
                    $scope.SummaryDataList.push({dateValue:dateKey,dayValue:dayKey,Hours:Hrssum,TotalAmount:amountSum});                   
               }
                
               for(var i = 0;i < summary_AllDataArray1.length;i++) {
                    
                    if($scope.SemiMonthlyView.SelectedStatus != 'Draft/Submitted/Approved/Recalled/Reverted') {
                    
                        if(summary_AllDataArray1[i].Status == $scope.SemiMonthlyView.SelectedStatus 
                            && summary_AllDataArray1[i].contactId == $scope.SemiMonthlyView.SelectedContact) {
                            $scope.showDetaildata.push(summary_AllDataArray1[i]);
                        }else {
                            var obj = {};
                            obj = angular.copy(summary_AllDataArray1[i]);
                            obj.Hours = 0.00;
                            obj.Payrate = 0.00;
                            obj.TotalAmount = 0.00;
                            obj.ProjectName = '';
                            obj.Status = '';
                            obj.TaskName = '';
                            obj.contactName = '';
                            $scope.showDetaildata.push(obj);
                        }
                    }else {
                        if(summary_AllDataArray1[i].Status != 'Rejected' && summary_AllDataArray1[i].contactId == $scope.SemiMonthlyView.SelectedContact) {
                            $scope.showDetaildata.push(summary_AllDataArray1[i]);
                        }else {
                            var obj = {};
                            obj = angular.copy(summary_AllDataArray1[i]);
                            obj.Hours = 0.00;
                            obj.Payrate = 0.00;
                            obj.TotalAmount = 0.00;
                            obj.ProjectName = '';
                            obj.Status = '';
                            obj.TaskName = '';
                            obj.contactName = '';
                            $scope.showDetaildata.push(obj);
                        }
                    }
                }
                
            }
            
            // To get users related to logged in usr for delegated approval use case
            // Added by NS on May 3 2018
            function getDelegatedApprovarRelatedUsr(){
                
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.supervisorTimeApproval_Ctrl.getDelegatedApproverRelatedUsrs}',
                    function(result, ev) {
                        if(ev.status) {
                            $timeout(function(){
                                //console.log('::::getDelegatedApprovarRelatedUsr:::',result);
                                $scope.UsersRelatedtoDA = result;
                                $scope.UsersRelatedtoDA.unshift({Id:'--None--',Name:'--None--'});
                                console.log(':::::::$scope.UsersRelatedtoDA::::',$scope.UsersRelatedtoDA);
                            });
                            
                        } else {
                            console.log('::::ev::::',ev);
                        }
                    },
                    {escape: true}
                ); 
            
            }
            
            getDelegatedApprovarRelatedUsr();
            
            SummaryWeekRangeFilterFormation();
            
            var monthDt1 = moment($scope.SemiMonthlyView.summaryWeekRange.split(' to ')[0],'MM-DD-YYYY').format('YYYY-MM-DD');
            var monthDt2 = moment($scope.SemiMonthlyView.summaryWeekRange.split(' to ')[1],'MM-DD-YYYY').format('YYYY-MM-DD');
            
            //console.log(':::::monthDt1,monthDt2:::::::',$scope.summaryWeekRange);
            
            getSemiMonthlyViewData(monthDt1,monthDt2);
            
            
            // Added by Sukanya on November 29 2016 for project record Type filter
            //QueryProjectRecordTypes();
            
            
            if($scope.urlValues.urlUserType == 'Internal'){
                getTimeCardMethod();
            }else if($scope.urlValues.urlUserType == 'Instructor') {
                getInstrcutor_timeDetails();
            }else {
                getTimeCardMethod();
            }
            
            
            
            //getInstrcutor_timeDetails();

            if( (typeof sforce != 'undefined') && (sforce != null) ) {
                $scope.exportBtn = false;
            }
            else {
                $scope.exportBtn = true;
            }
            function generateCSV(arrayOfData, tableHeader) {
                var csvContent = "data:text/csv;charset=utf-8,";
                for(var i = 0; i < tableHeader.length; i++) {
                    csvContent += tableHeader[i].text;
                    if(i != tableHeader.length - 1)
                        csvContent += ',';
                }
                csvContent += '\n';
                for(var i = 0; i < arrayOfData.length; i++) {
                    for(var j = 0; j < tableHeader.length; j++) {
                        csvContent += arrayOfData[i][tableHeader[j].api];
                        if(j != tableHeader.length - 1)
                            csvContent += ',';
                    }
                    if(i != arrayOfData.length - 1)
                        csvContent += '\n';
                }
                return csvContent;
            }
            function downloadCSV(csvContent, filename) {
                var encodedData = encodeURI(csvContent);
                console.log('1');
                if( (typeof sforce != 'undefined') && (sforce != null) ) {
                    console.log('2');
                    //sforce.one.navigateToURL(encodedData);
                    window.open(encodedData);
                }
                else {
                    console.log('3');
                    var link = document.createElement("a");
                    link.setAttribute('href', encodedData);
                    link.setAttribute('download', filename + '.csv');
                    link.click();
                };
            }
            var arrayOfData = [];
            var tableHeader = [];
            $scope.downloadAsCSV = function() {
                for(var key in $scope.contactList) {
                    console.log('::::::::::::::',$scope.detailList[key]);
                    for(var i = 0;i < $scope.detailList[key].length;i++) {
                        arrayOfData[i] = $scope.detailList[key][i];
                    }
                }
                
                /*if($scope.selectedUserType == 'Instructor') {
                    tableHeader = [{api:'Instructor',text:'Contact Name'},{api:'DLS_Class',text:'DLS Class #'},{api:'ProjectTaskName',text:'Task Detail'},{api:'timeDayDate',text:'Date'},{api:'StartTime',text:'Start Time'},{api:'EndTime',text:'End Time'},{api:'HrsBeforedApproved',text:'Hours'},{api:'lateCancellation',text:'Cancellation'},{api:'internalComment',text:'Notes / Planned Make-Up*'}];
                } else if($scope.selectedUserType == 'Internal') {
                    tableHeader = [{api:'Instructor',text:'Contact Name'},{api:'ProjectName',text:'Project Name'},{api:'ProjectTaskName',text:'Task Detail'},{api:'Billable',text:'Billable'},{api:'timeDayDate',text:'Date'},{api:'HrsBeforedApproved',text:'Hours'},{api:'internalComment',text:'Notes / Planned Make-Up*'}];
                }*/
                
                tableHeader = [{api:'Instructor',text:'Contact Name'},{api:'ProjectName',text:'Project Name'},{api:'ProjectTaskName',text:'Task Detail'},{api:'Billable',text:'Billable'},{api:'timeDayDate',text:'Date'},{api:'HrsBeforedApproved',text:'Hours'},{api:'internalComment',text:'Notes / Planned Make-Up*'}];
                
                console.log(':::::::arrayOfData:::::::',arrayOfData);
                downloadCSV(generateCSV(arrayOfData, tableHeader),'TimeSheetDetails');
            }
        })
        
        .directive('multiPicklist',function($document){
        return {
            restrict: 'EA',
            templateUrl:'multiplePick.html',
            replace:true,
            scope: {
              pickListOptions : '=?options',
              selectedOptions : '=?',
              isVisible: '=?onBlur',
              onBlur: '='
            },
            controller:function($scope){
            
                var selectedOptArr = [];
                $scope.count = 0;
              
               
                $scope.toggleSelectOption = function (option) {
                    var intIndex = $scope.selectedOptArr.indexOf(option);
                    if(intIndex > -1){
                         $scope.selectedOptArr.splice(intIndex, 1);
                    }
                    else{
                        $scope.selectedOptArr.push(option);
                    }
                    $scope.updateSelectedOptions($scope.selectedOptArr);
                };
            
                $scope.updateSelectedOptions = function(temp){
                    console.log(temp);
                    $scope.selectedOptions = $scope.toString(temp,";");
                    $scope.count = $scope.selectedOptArr.length; 
                };

                $scope.$watch(function(scope) {scope.selectedOptions}, function(newVar, oldVar){
                    console.log('inside watcher');
                    updatePicklist(newVar);
                }, true);
                
                function updatePicklist(selectedList) {
                    selectedOptArr = [];
                    if(selectedList){
                        selectedOptArr = selectedList;
                    }
                }
                
                $scope.isSelected = function(opt){
                    return $scope.selectedOptArr.indexOf(opt) > -1;
                };
                
                $scope.toString = function(temp,exp){
                    return temp.join(exp);
                };
                
                $scope.toArray = function(temp,exp){
                    return temp.split(exp);
                };
                
                $scope.filterOptions = function(){
                    if($scope.selectedOptions){
                        $scope.selectedOptArr = $scope.toArray($scope.selectedOptions, ';');
                        console.log("assigning is selected", $scope.selectedOptArr)
                    } else {
                        $scope.selectedOptArr = [];
                    }
                    $scope.count = $scope.selectedOptArr.length;   
                };
               
            },
            link:function(scope, element, attr, ctrl){
               console.log('link called.');
               
               if(scope.selectedOptions){
                   scope.filterOptions();
               }
               
               var showOptions;
               
               var bindHandler = function(event){
                    console.log("binding");
                    var isClickedElementChildOfPopup = element[0].contains(event.target)
                      
                    if(isClickedElementChildOfPopup)
                      return;
                      
                    console.log(element,isClickedElementChildOfPopup,event.target,element[0].contains(event.target));
                        scope.$apply(function(){
                            scope.toggleDropdown(event);
                        });
                    
               }
                
               scope.toggleDropdown = function ($event) {
                   
                   scope.isOptVisible = !scope.isOptVisible;
                   console.log("going to bind",scope.isOptVisible);
                    if(scope.isOptVisible){
                        console.log('if');
                         $document.bind('click',bindHandler); 
                    }
                    else{
                        console.log('else');
                        console.log("unbinding", scope.selectedOptions);
                        $document.unbind('click');
                        //console.log('onBlur', scope.onBlur, typeof scope.onBlur);
                        if(typeof scope.onBlurClone === 'function') {
                            scope.onBlurClone(scope.selectedOptions);
                        } else if(typeof scope.onBlur === 'function') {
                            scope.onBlurClone = scope.onBlur;
                            scope.onBlur(scope.selectedOptions);
                        }
                        scope.isVisible = !scope.isVisible;
                       
                    }
                };
                
            }
            
        };
    });
        
    </script>
</apex:component>